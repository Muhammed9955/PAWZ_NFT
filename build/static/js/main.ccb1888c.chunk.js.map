{"version":3,"sources":["utils/ipfs.ts","components/buttonGroup/index.tsx","components/Text/index.tsx","components/header/Logo/index.tsx","components/footer/Footer.tsx","components/Loader/index.tsx","components/button/Button.tsx","utils/index.ts","components/header/UserDropDown/index.tsx","utils/getRpcUrl.ts","utils/wallet.ts","utils/connectors.ts","hooks/useAuth.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/profileList/getProfileList.ts","state/profileList/index.tsx","state/prices/index.ts","state/index.ts","state/hooks.ts","components/header/Header.tsx","components/profile/ProfileImage.tsx","components/cards/product/index.tsx","pages/home/header/index.tsx","pages/home/category/index.tsx","components/socialButtons/index.tsx","pages/home/artist/index.tsx","hooks/useApi.ts","pages/home/constant.ts","pages/home/index.tsx","components/Input/index.tsx","components/Input/file/index.tsx","utils/api.ts","pages/profile/edit/index.tsx","pages/profile/detail/index.tsx","utils/contracts.ts","pages/upload/index.tsx","pages/product/detail/header/index.tsx","pages/product/detail/productActions/index.tsx","pages/product/detail/history/index.tsx","components/ExternViewLink/index.tsx","pages/product/detail/index.tsx","utils/scrollToTop.ts","App.tsx","hooks/useEagerConnect.ts","reportWebVitals.ts","index.tsx"],"names":["ipfs","require","host","port","protocol","getImageIpfsHash","data","a","files","add","result","hash","readFileAsync","file","Promise","resolve","reject","reader","FileReader","onload","Buffer","from","onerror","readAsArrayBuffer","ButtonGroup","btn1Label","btn2Label","btn1Prefix","onClick","className","variant","value","InfoText","children","size","inline","Logo","to","Image","src","fluid","Footer","Container","Row","Col","lg","type","span","offset","xs","sm","href","target","xmlns","width","height","viewBox","id","d","transform","fill","Loader","message","Button","isLoading","img","label","loadingMessage","gradientDir","disabled","Networks","CONTRACTS_BY_NETWORK","PAWZNFT","address","abi","PAWZNFTABI","currentNetwork","process","baseApiUrl","getContractInfo","name","chainId","contracts","truncateWalletString","walletAddress","lengthStr","length","substring","getContractObj","provider","info","Contract","UserDropDown","props","OverlayTrigger","trigger","placement","overlay","Popover","userName","userAvatar","balance","rootClose","nodes","setupNetwork","window","ethereum","parseInt","request","method","params","toString","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","console","error","injectedConnector","InjectedConnector","useAuth","useWeb3React","library","activate","active","deactivate","login","useCallback","toast","logout","getProfile","requestOptions","headers","body","JSON","stringify","wallet_address","fetch","response","ok","json","responseData","status","dataUserProfile","user_detail","initialState","isInitialized","profileSlice","createSlice","reducers","profileFetchStart","state","profileFetchSucceeded","_state","action","payload","profileFetchFailed","profileClear","actions","getProfileList","profileList","users","profileListSlice","profileListFetchStart","profileListFetchSucceeded","profileListFetchFailed","profileListClear","fetchPrices","createAsyncThunk","updated_at","Object","keys","reduce","accum","token","toLowerCase","parseFloat","price","pricesSlice","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","store","configureStore","devTools","reducer","prices","pricesReducer","profile","profileReducer","profileListReducer","useAppDispatch","useDispatch","useFetchProfile","account","dispatch","useEffect","useProfile","useSelector","hasProfile","useFetchProfileList","useProfileForWallet","find","Header","useState","loginStatus","setLoginStatus","history","useHistory","context","connector","etherBalance","setEtherBalance","isLoggedin","getBalance","then","etherVal","ethers","utils","formatEther","toFixed","username","userAvatarUrl","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","Nav","Item","push","ProfileImage","fileImg","setFileImg","verified","edit","htmlFor","onChange","e","URL","createObjectURL","ProductCard","product","hidePrice","initialCreatorAddress","goToProductDetails","baseID","ItemPrice","Card","Img","image","xl","md","HomeHeader","useForm","control","formState","errors","handleSubmit","Category","title","SocialButtons","twitterUrl","instagramUrl","youtubeUrl","telegramUrl","RenderArtist","artist","onSelect","user","soldAmount","Artist","topArtistList","setData","strUrl","nftTopArtists","fetchData","useGetNFTTopArtists","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","map","i","Home_List","HomePage","start","setStart","loading","setLoading","category","sortField","sortOrder","NFTObjectList","setNFTObjectList","items","count","sort_field","sort_order","useGetNFTList","loadMoreItem","nfts","newNFTObjectList","item","list","isAlreadyAdded","log","total_count","renderLoadMore","Input","placeholder","postfix","register","inputValue","setInputValue","event","required","FileInput","dispalyImage","defaultImage","axios","defaults","baseURL","post","get","path","resole","Error","statusText","catch","apiUrl","ProfileEdit","avatarImage","setAvatarImage","backgroundImage","setBackgroundImage","Socials","icon","onSubmit","user_bio","user_avatar_url","user_background_url","userBackgroupUrl","buffer","social_url","API","res","success","finally","userBio","social","index","ProfileDetail","match","useLocation","nftUserFullDetail","useGetNFTUserFullDetail","user_profile","moment","accountCreatedAt","format","Tab","defaultActiveKey","Link","eventKey","Content","Pane","userNfts","currentNfts","collection","soldNfts","createdNfts","boughtNfts","getNFTBscScanLink","tokenId","contractInfo","mint","tokenURI","nft_price","nftContract","parseEther","tx","wait","buy","tokenID","updatePrice","updateListingStatus","shouldBeListed","Upload","nftImage","setNFTImage","nftName","setNFTName","nftDecription","setNFTDecription","nftPrice","setNFTPrice","setLoadingStatus","submitAsset","load_toast_id","image_url","formdata","FormData","append","base_id","getSigner","setTimeout","dismiss","ProductDetailHeader","creatorBackgroupUrl","creatorAvatarUrl","creatorName","ProductActions","description","ownerAddress","listed","currentUserProfile","updateNFTListingStatus","location","reload","updateNFTPrice","purchaseNFT","priceChangeHandler","newPrice","ProductHistory","historyEvents","nft_user_list","contractAddress","userList","useGetUserList","sorted_nft_events","sort","evt1","evt2","doneOn","event_list","AvatarImg","eventType","user_wallet","user_image","user_name","user_verified","event_content","event_date","fromNow","minter","buyer","nftSoldAtPrice","priceUpdater","newNftPrice","HistoryRow","ExternalViewLink","eitherLink","IPFSLink","metadata","links","url","faSignal","faEye","link","open","faExternalLinkAlt","ProductDetails","nftDetail","useGetNFTDetail","previewVisible","setPreviewVisible","SoldLabel","OwnerBtnLabel","previewHandleTriggle","creator","nft","source","visible","onHide","owner","withRouter","unlisten","listen","scrollTo","App","tried","setTried","setError","useEagerConnect","position","toastOptions","duration","basename","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getLibrary","Web3Provider","pollingInterval","document","getElementById"],"mappings":"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","file":"static/js/main.ccb1888c.chunk.js","sourcesContent":["const ipfsClient = require('ipfs-api');\r\nconst ipfs = new ipfsClient({\r\n  host: 'ipfs.infura.io',\r\n  port: 5001,\r\n  protocol: 'https'\r\n});\r\n\r\nexport const getImageIpfsHash = async (data) => {\r\n  const result = await ipfs.files.add(data);\r\n  const hash = result[0].hash;\r\n  return hash;\r\n};\r\n\r\nexport function readFileAsync(file) {\r\n  return new Promise((resolve, reject) => {\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      resolve(Buffer.from(reader.result));\r\n    };\r\n\r\n    reader.onerror = reject;\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  })\r\n}","import { Button } from 'react-bootstrap';\r\nimport './index.scss';\r\n\r\ninterface PropsType {\r\n  btn1Label: any;\r\n  btn2Label: any;\r\n  btn1Prefix?: string;\r\n  onClick: (type: string) => void;\r\n}\r\n\r\nexport default function ButtonGroup({ btn1Label, btn2Label, btn1Prefix, onClick }: PropsType) {\r\n  return (\r\n    <div className=\"button-group\">\r\n      <Button className=\"button-group__left\" variant=\"dark\" value=\"left\" onClick={() => onClick && onClick('left')}>\r\n        {btn1Prefix && <div>{btn1Prefix}</div>}\r\n        {btn1Label}\r\n      </Button>\r\n      <Button className=\"button-group__right\" variant=\"dark\" value=\"right\" onClick={() => onClick && onClick('right')}>\r\n        {btn2Label}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { any, element, oneOf, string } from 'prop-types';\r\nimport './index.scss';\r\n\r\ninterface PropsType {\r\n  children: any;\r\n  className?: string;\r\n  size?: 'xl' | 'lg' | 'md' | 'sm';\r\n  variant?: 'secondary' | 'primary';\r\n  inline?: boolean;\r\n}\r\n\r\nexport default function InfoText({ className, children, size = 'md', variant = 'primary', inline = false }: PropsType) {\r\n  return <p className={`info-text ${className} ${size} ${variant} ${inline ? 'inline' : ''}`}>{children}</p>;\r\n}\r\n","import { Link } from 'react-router-dom';\r\nimport { Image } from 'react-bootstrap';\r\nimport './index.scss';\r\nexport default function Logo() {\r\n  return (\r\n    <span className=\"logo\">\r\n      <Link to=\"/\">\r\n        <Image className=\"logo\" src=\"/img/logo_new.png\" fluid />\r\n        PAWZ NFT\r\n      </Link>\r\n    </span>\r\n  );\r\n}\r\n","import { Col, Container, Image, Row } from 'react-bootstrap';\r\nimport SocialButtons from '../socialButtons';\r\nimport './Footer.scss';\r\nimport ButtonGroup from '../buttonGroup/index';\r\nimport { Link } from 'react-router-dom';\r\nimport InfoText from 'components/Text';\r\nimport Logo from '../header/Logo/index';\r\n\r\nexport const Footer = () => {\r\n  function CompanyLinks() {\r\n    return (\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">About us</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Services</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Team</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Pricing</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Project</Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n  function UsefullLinks() {\r\n    return (\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Terms of Services</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Privacy Policy</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Documentations</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Changelog</Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n  function QuickLInks() {\r\n    return (\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Our Story</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Practice Areas</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Team</Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"main-footer\">\r\n      <Container>\r\n        <Row className=\"mb-5\">\r\n          <Col lg=\"4\" className=\"text-center text-sm-left\">\r\n            <Logo />\r\n            <br />\r\n            <InfoText>\r\n              PAWZ NFT provides the best partnership support based on the latest technology. Become the market leader\r\n              with the rapid launch Of the platform.\r\n            </InfoText>\r\n            <ButtonGroup\r\n              btn1Label=\"Submit Artist profile\"\r\n              btn2Label=\"Submit Partnership profile\"\r\n              onClick={type => {\r\n                // console.log(type);\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col lg={{ span: 7, offset: 1 }}>\r\n            <Row className=\"mt-3 mt-sm-0\">\r\n              <Col xs=\"6\" sm=\"3\">\r\n                <h4>Company</h4>\r\n                {CompanyLinks()}\r\n              </Col>\r\n              <Col xs=\"6\" sm=\"3\" className=\"text-right text-sm-left\">\r\n                <h4>Usefull Links</h4>\r\n                {UsefullLinks()}\r\n              </Col>\r\n              <Col xs=\"6\" sm=\"3\">\r\n                <h4>Quick Link</h4>\r\n                {QuickLInks()}\r\n              </Col>\r\n              <Col xs=\"6\" sm=\"3\" className=\"text-right text-sm-left\">\r\n                <h4>Social Media</h4>\r\n                <Row className=\"social-buttons\">\r\n                  <a href=\"https://twitter.com/pawznft\" target=\"_blank\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16.721\" height=\"14.12\" viewBox=\"0 0 16.721 14.12\">\r\n                        <path\r\n                          id=\"input-twitter\"\r\n                          d=\"M32.721,18.671a6.647,6.647,0,0,1-1.971.561,3.549,3.549,0,0,0,1.508-1.972,6.714,6.714,0,0,1-2.178.865A3.365,3.365,0,0,0,27.576,17a3.536,3.536,0,0,0-3.342,4.376,9.622,9.622,0,0,1-7.071-3.724,3.655,3.655,0,0,0,1.062,4.759,3.321,3.321,0,0,1-1.554-.446A3.538,3.538,0,0,0,19.423,25.5a3.31,3.31,0,0,1-1.549.061,3.453,3.453,0,0,0,3.2,2.476A6.717,6.717,0,0,1,16,29.518a9.453,9.453,0,0,0,5.258,1.6c6.369,0,9.968-5.59,9.75-10.6a7.131,7.131,0,0,0,1.712-1.845\"\r\n                          transform=\"translate(-16 -17)\"\r\n                          fill={\"#ffffffbd\"}\r\n                        />\r\n                      </svg>\r\n                      <span className=\"social-label ml-2\">Twitter</span>\r\n                    </div>\r\n                  </a>\r\n\r\n                  <a href=\"https://github.com/pawznft\" target=\"_blank\">\r\n                    <div className=\" d-flex align-items-center\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16.72\" height=\"16.72\" viewBox=\"0 0 16.72 16.72\">\r\n                        <path\r\n                          id=\"input-instagram\"\r\n                          d=\"M27.739,16a4.987,4.987,0,0,1,4.976,4.759l0,.222v6.758a4.987,4.987,0,0,1-4.759,4.976l-.222,0H20.981A4.987,4.987,0,0,1,16,27.961l0-.222V20.981A4.987,4.987,0,0,1,20.759,16l.222,0ZM24.36,20.644a3.716,3.716,0,0,0,0,7.431c2.049,0,3.716-3.716,3.716-3.716S26.409,20.644,24.36,20.644ZM29,17.765A1.034,1.034,0,1,0,30.039,18.8,1.034,1.034,0,0,0,29,17.765Z\"\r\n                          transform=\"translate(-16 -16)\"\r\n                          fill={\"#ffffffbd\"}\r\n                        />\r\n                      </svg>\r\n                      <span className=\"social-label ml-2\">GitHub</span>\r\n                    </div>\r\n                  </a>\r\n\r\n                  <a href=\"https://www.youtube.com/channel/UCFe89XviEese7F5vEYlJ_fA\" target=\"_blank\">\r\n                    <div className=\" d-flex align-items-center\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16.72\" height=\"12.92\" viewBox=\"0 0 16.72 12.92\">\r\n                        <path\r\n                          id=\"input-youtube\"\r\n                          d=\"M21.456,16c.579.006,3.649.046,5.756.2a2.193,2.193,0,0,1,1.672.763,4.368,4.368,0,0,1,.663,1.821,29.919,29.919,0,0,1,.173,3h0v1.38c0,1.468-.173,2.966-.173,2.966a4.368,4.368,0,0,1-.663,1.821,2.308,2.308,0,0,1-1.672.763c-1.993.175-4.848.2-5.641.2H21.29c-.29,0-1.438-.013-2.652-.041l-.385-.009c-1.027-.027-2.041-.067-2.572-.125a2.743,2.743,0,0,1-1.845-.793,4.368,4.368,0,0,1-.663-1.821A28.956,28.956,0,0,1,13,23.165V21.618c.012-1.44.172-2.829.172-2.829a3.971,3.971,0,0,1,.663-1.821,2.308,2.308,0,0,1,1.672-.763c2.107-.159,5.177-.2,5.756-.2Zm-2.114,3.493v6.372s5.477-1.52,5.477-3.113S19.342,19.494,19.342,19.494Z\"\r\n                          transform=\"translate(-13 -16.001)\"\r\n                          fill={\"#ffffffbd\"}\r\n                        />\r\n                      </svg>\r\n                      <span className=\"social-label ml-2\">You Tube</span>\r\n                    </div>\r\n                  </a>\r\n\r\n                  <a href=\"https://t.me/pawznft\" target=\"_blank\">\r\n                    <div className=\" d-flex align-items-center\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16.72\" height=\"13.933\" viewBox=\"0 0 16.72 13.933\">\r\n                        <path\r\n                          id=\"telegram\"\r\n                          d=\"M1.149,6q6.732-2.949,8.979-3.889C14.4.321,15.292.01,15.871,0a1.009,1.009,0,0,1,.6.18A.653.653,0,0,1,16.687.6a2.753,2.753,0,0,1,.026.609c-.232,2.448-1.234,8.389-1.744,11.13-.216,1.16-.641,1.549-1.052,1.587-.894.083-1.573-.594-2.439-1.165-1.355-.893-2.121-1.449-3.436-2.321-1.52-1.007-.535-1.561.332-2.466.227-.237,4.166-3.84,4.242-4.167a.318.318,0,0,0-.072-.274.353.353,0,0,0-.319-.031q-.2.047-6.494,4.316a2.913,2.913,0,0,1-1.67.62,10.937,10.937,0,0,1-2.393-.569C.7,7.555-.063,7.389,0,6.854Q.056,6.435,1.149,6Z\"\r\n                          fill={\"#ffffffbd\"}\r\n                        />\r\n                      </svg>\r\n                      <span className=\"social-label ml-2\">Telegram</span>\r\n                    </div>\r\n                  </a>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <div className=\"copy-right\">\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <p className=\"m-0 text-center text-sm-left\">Copyright &copy; 2021 PAWZ-NFT</p>\r\n            </Col>\r\n            <Col className=\"text-center text-sm-right\">\r\n              <p className=\"m-0\">Contact: info@pawznft.io</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { string } from 'prop-types';\r\nimport './index.scss';\r\nexport default function Loader({ message }) {\r\n  return (\r\n    <div className=\"loader\">\r\n      <img className=\"loader-animation\" src=\"/img/loader.svg\" /> <span> {message || 'Load More'}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nLoader.propTypes = {\r\n  message: string,\r\n};\r\n","import './Button.css';\r\nimport { Button as BootstrapButton, Image } from 'react-bootstrap';\r\nimport { ButtonProps } from '../../Type';\r\nimport { useState } from 'react';\r\nimport Loader from 'components/Loader';\r\n\r\nexport const Button = ({\r\n  type,\r\n  variant,\r\n  isLoading,\r\n  img,\r\n  label,\r\n  loadingMessage,\r\n  className,\r\n  gradientDir,\r\n  onClick,\r\n}: ButtonProps) => {\r\n  return (\r\n    <BootstrapButton\r\n      disabled={isLoading}\r\n      className={`button click-effect ${className} ${gradientDir ? gradientDir + '-gradient' : ''}`}\r\n      type={type}\r\n      variant={variant}\r\n      onClick={() => onClick && onClick()}\r\n    >\r\n      {isLoading && <Loader message={loadingMessage || 'Saving...'} />}\r\n      {!isLoading && img && <Image src={img} />}\r\n      {!isLoading && label}\r\n    </BootstrapButton>\r\n  );\r\n};\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport PAWZNFTABI from 'contracts/PAWZNFT.json'\r\n\r\nexport const Networks = {\r\n  MainNet: 56,\r\n  Testnet: 97,\r\n  Rinkeby: 4,\r\n  Kovan: 42,\r\n}\r\n\r\nexport const CONTRACTS_BY_NETWORK = {\r\n  [Networks.MainNet]: {\r\n    PAWZNFT: {\r\n      address: '0x914F3856C61fc0CF01B4ea6cAaD4Fe4adA217e92',\r\n      abi: PAWZNFTABI,\r\n    }\r\n  },\r\n  [Networks.Testnet]: {\r\n    PAWZNFT: {\r\n      address: '0x791d3D1b83dA4fdCc03e67393d78028e19771116',\r\n      abi: PAWZNFTABI,\r\n    }\r\n  },\r\n  [Networks.Rinkeby]: {\r\n    PAWZNFT: {\r\n      address: '0xE41367745bfA0fCeBDaB4840ED8ED7364F894943',\r\n      abi: PAWZNFTABI,\r\n    }\r\n  },\r\n  [Networks.Kovan]: {\r\n    PAWZNFT: {\r\n      address: '0xb8b37a2781baf1bdf074caf5ec983defe94c73af',\r\n      abi: PAWZNFTABI,\r\n    }\r\n  },\r\n}\r\n\r\nexport const currentNetwork = process.env.REACT_APP_NETWORK_ID;\r\n\r\nexport const baseApiUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport function getContractInfo(name, chainId = null) {\r\n  if (!chainId) chainId = currentNetwork;\r\n\r\n  const contracts = CONTRACTS_BY_NETWORK?.[chainId];\r\n  if (contracts) {\r\n    return contracts?.[name];\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function truncateWalletString(walletAddress) {\r\n  if (!walletAddress) return walletAddress;\r\n  const lengthStr = walletAddress.length;\r\n  const startStr = walletAddress.substring(0, 7);\r\n  const endStr = walletAddress.substring(lengthStr - 7, lengthStr);\r\n  return startStr + '...' + endStr;\r\n}\r\n\r\nexport function truncateHashString(txhash) {\r\n  if (!txhash) return txhash;\r\n  const lengthStr = txhash.length;\r\n  const startStr = txhash.substring(0, 10);\r\n  const endStr = txhash.substring(lengthStr - 10, lengthStr);\r\n  return startStr + '...' + endStr;\r\n}\r\n\r\nexport function getContractObj(name, chainId, provider) {\r\n  const info = getContractInfo(name, chainId);\r\n  return !!info && new Contract(info.address, info.abi, provider);\r\n}\r\n\r\nexport const shorter = (str) =>\r\n  str?.length > 8 ? str.slice(0, 6) + '...' + str.slice(-4) : str\r\n","import { Col, OverlayTrigger, Image, Popover, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserDropDownProps } from 'Type';\r\nimport './index.scss';\r\nimport InfoText from '../../Text/index';\r\nimport { Button } from '../../button/Button';\r\nimport { truncateWalletString } from 'utils';\r\n\r\nexport default function UserDropDown(props: UserDropDownProps) {\r\n  const BtnLabel = function () {\r\n    return (\r\n      <span className=\"user-profile-icon\">\r\n        <div className=\"text-truncate text-left\">\r\n          {props.balance} BNB <br />\r\n        </div>\r\n        <Image src={props.userAvatar || '/img/default-profile.png'} />\r\n      </span>\r\n    );\r\n  };\r\n  return (\r\n    <OverlayTrigger\r\n      trigger=\"click\"\r\n      key=\"bottom\"\r\n      placement=\"bottom-end\"\r\n      overlay={\r\n        <Popover id=\"user-dropdown\">\r\n          <h4>{props.userName}</h4>\r\n          <InfoText variant=\"secondary\">{truncateWalletString(props.walletAddress)}</InfoText>\r\n          <Row className=\"main-row\">\r\n            <Col>\r\n              <Row className=\"balance-row\">\r\n                <Col xs=\"auto\">\r\n                  <Image className=\"user-avatar\" src={props.userAvatar || '/img/default-profile.png'} />\r\n                </Col>\r\n                <Col>\r\n                  <InfoText variant=\"primary\" size=\"md\">\r\n                    Balance\r\n                  </InfoText>\r\n                  <p>\r\n                    <strong>{props.balance}</strong>\r\n                    <InfoText inline={true}>BNB</InfoText>\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            {/* <Col className=\"visa-col\">\r\n              <p>Buy BNB</p>\r\n              <Image className=\"visa-icon\" src=\"/img/visa.png\" />\r\n            </Col> */}\r\n          </Row>\r\n          <Row className=\"msg-block\">\r\n            <a href=\"https://academy.binance.com/en/articles/how-to-get-started-with-binance-smart-chain-bsc\" target=\"_blank\" className=\"icon-links\">Learn how to top-up your BSC wallet with BNB</a>\r\n          </Row>\r\n\r\n          <Link to={`/creatorDetail/${props.walletAddress}`} className=\"icon-link\">\r\n            <Image src=\"/img/user-icon.svg\" />\r\n            MY PROFILE\r\n          </Link>\r\n          {/* <a href=\"#\" className=\"icon-link\">\r\n            <Image src=\"/img/Icon ionic-md-headset.svg\" />\r\n            SUPPORT\r\n          </a> */}\r\n          {/* <a href=\"#dc\" className=\"icon-link\">\r\n            <Image src=\"/img/Icon ionic-ios-log-out.svg\" />\r\n            DISCONNECT\r\n          </a>\r\n          <a href=\"#e\" className=\"icon-link earth\">\r\n            <Image src=\"/img/earth.svg\" />\r\n            EN\r\n          </a> */}\r\n        </Popover>\r\n      }\r\n      rootClose\r\n    >\r\n      <Button label={BtnLabel()} gradientDir=\"left\" variant=\"primary\" />\r\n    </OverlayTrigger>\r\n  );\r\n}\r\n","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3] // For Binance\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { currentNetwork } from 'utils'\r\nimport { nodes } from './getRpcUrl'\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(currentNetwork, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n          },\r\n        ],\r\n      })\r\n      \r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { currentNetwork } from \"./index\"\r\n\r\nexport const injectedConnector = new InjectedConnector({\r\n  // supportedChainIds: [parseInt(currentNetwork)],\r\n});\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { setupNetwork } from 'utils/wallet'\r\nimport { injectedConnector } from \"../utils/connectors\"\r\nimport { toast } from 'react-hot-toast'\r\nimport { currentNetwork } from 'utils'\r\n\r\nconst useAuth = () => {\r\n  const { library, chainId, active, activate, deactivate } = useWeb3React()\r\n\r\n  const login = useCallback(async () => {\r\n    await activate(injectedConnector);\r\n    if (library && chainId != parseInt(currentNetwork)) {\r\n      const hasSetup = await setupNetwork()\r\n      if (hasSetup) {\r\n        await activate(injectedConnector)\r\n      }\r\n      else {\r\n        // toast.error(\"Unsupported Network. This platform is working on Binance Smart Chain\");\r\n        toast.error(\"Unsupported Network. This platform works on Binance Smart Chain\");\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [chainId])\r\n\r\n  const logout = useCallback(() => {\r\n    deactivate()\r\n  }, [deactivate])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","import { Profile } from 'state/types'\r\nimport { baseApiUrl } from 'utils';\r\n\r\nconst getProfile = async (address: string): Promise<Profile> => {\r\n  try {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ wallet_address: address })\r\n    };\r\n\r\n    const response = await fetch(`${baseApiUrl}/get_or_add_nft_user`, requestOptions)\r\n\r\n    if (!response.ok) return null;\r\n\r\n    const responseData = await response.json()\r\n    if (responseData.status === \"success\") {\r\n      const dataUserProfile: Profile = responseData.user_detail\r\n      return dataUserProfile\r\n    }\r\n    \r\n    return null\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default getProfile\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState, Profile } from 'state/types'\r\nimport type { AppDispatch } from 'state'\r\nimport getProfile from './getProfile'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: null,\r\n}\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (_state, action: PayloadAction<Profile>) => {\r\n      const profile = action.payload\r\n\r\n      return {\r\n        isInitialized: true,\r\n        isLoading: false,\r\n        data: profile,\r\n      }\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    profileClear: () => ({\r\n      ...initialState,\r\n      isLoading: false,\r\n    }),\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const {\r\n  profileFetchStart,\r\n  profileFetchSucceeded,\r\n  profileFetchFailed,\r\n  profileClear,\r\n} = profileSlice.actions\r\n\r\n// Thunks\r\n// TODO: this should be an AsyncThunk\r\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (error) {\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n","import { Profile } from 'state/types'\r\nimport { baseApiUrl } from 'utils';\r\n\r\nconst getProfileList = async (): Promise<Profile[]> => {\r\n  try {\r\n    const response = await fetch(`${baseApiUrl}/users`)\r\n\r\n    if (!response.ok) return null;\r\n\r\n    const responseData = await response.json()\r\n    if (responseData.status === \"success\") {\r\n      const profileList: Profile[] = responseData.users;\r\n      return profileList\r\n    }\r\n\r\n    return null\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default getProfileList\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileListState, Profile } from 'state/types'\r\nimport type { AppDispatch } from 'state'\r\nimport getProfileList from './getProfileList'\r\n\r\nconst initialState: ProfileListState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: null,\r\n}\r\n\r\nexport const profileListSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileListFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileListFetchSucceeded: (_state, action: PayloadAction<Profile[]>) => {\r\n      const profile = action.payload\r\n\r\n      return {\r\n        isInitialized: true,\r\n        isLoading: false,\r\n        data: profile,\r\n      }\r\n    },\r\n    profileListFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    profileListClear: () => ({\r\n      ...initialState,\r\n      isLoading: false,\r\n    }),\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const {\r\n  profileListFetchStart,\r\n  profileListFetchSucceeded,\r\n  profileListFetchFailed,\r\n  profileListClear,\r\n} = profileListSlice.actions\r\n\r\n// Thunks\r\n// TODO: this should be an AsyncThunk\r\nexport const fetchProfileList = () => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(profileListFetchStart())\r\n    const response = await getProfileList()\r\n    dispatch(profileListFetchSucceeded(response))\r\n  } catch (error) {\r\n    dispatch(profileListFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileListSlice.reducer\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { PriceApiResponse, PriceApiThunk, PriceState } from 'state/types'\r\n\r\nconst initialState: PriceState = {\r\n  isLoading: false,\r\n  lastUpdated: null,\r\n  data: null,\r\n}\r\n\r\n// Thunks\r\nexport const fetchPrices = createAsyncThunk<PriceApiThunk>('prices/fetch', async () => {\r\n  const response = await fetch('https://api.pancakeswap.info/api/v2/tokens')\r\n  const data = (await response.json()) as PriceApiResponse\r\n\r\n  // Return normalized token names\r\n  return {\r\n    updated_at: data.updated_at,\r\n    data: Object.keys(data.data).reduce((accum, token) => {\r\n      return {\r\n        ...accum,\r\n        [token.toLowerCase()]: parseFloat(data.data[token].price),\r\n      }\r\n    }, {}),\r\n  }\r\n})\r\n\r\nexport const pricesSlice = createSlice({\r\n  name: 'prices',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPrices.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiThunk>) => {\r\n      state.isLoading = false\r\n      state.lastUpdated = action.payload.updated_at\r\n      state.data = action.payload.data\r\n    })\r\n  },\r\n})\r\n\r\nexport default pricesSlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux';\r\nimport profileReducer from './profile'\r\nimport profileListReducer from './profileList'\r\nimport pricesReducer from './prices'\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    prices: pricesReducer,\r\n    profile: profileReducer,\r\n    profileList: profileListReducer,\r\n  },\r\n})\r\n\r\n/**\r\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\r\n */\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\n\r\nexport default store\r\n","import { useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { PriceState, ProfileListState, ProfileState, State } from './types'\r\nimport { fetchProfile } from './profile'\r\nimport { fetchPrices } from './prices'\r\nimport { fetchProfileList } from './profileList'\r\n\r\n\r\n// Profile\r\n\r\nexport const useFetchProfile = () => {\r\n  const { library, chainId, account, active } = useWeb3React();\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    const isLoggedin = account && active && chainId === parseInt(process.env.REACT_APP_NETWORK_ID, 10);\r\n    if (isLoggedin) {\r\n      dispatch(fetchProfile(account))\r\n    }\r\n  }, [library, account, active, chainId, dispatch]);\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized, isInitialized, isLoading }\r\n}\r\n\r\n// ProfileList\r\n\r\nexport const useFetchProfileList = () => {\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    dispatch(fetchProfileList())\r\n  }, [dispatch])\r\n}\r\n\r\nexport const useProfileList = () => {\r\n  const { isInitialized, isLoading, data }: ProfileListState = useSelector((state: State) => state.profileList)\r\n  return { profileList: data, hasProfile: isInitialized, isInitialized, isLoading }\r\n}\r\n\r\nexport const useProfileForWallet = (address: string) => {\r\n  const { isInitialized, isLoading, data }: ProfileListState = useSelector((state: State) => state.profileList)\r\n  const proifle = data && data.find(profile => profile.walletAddress.toLowerCase() == address.toLowerCase());\r\n  return { profile: proifle, hasProfile: isInitialized, isInitialized, isLoading }\r\n}\r\n\r\n// Prices\r\nexport const useFetchPriceList = () => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPrices())\r\n  }, [dispatch])\r\n}\r\n\r\nexport const useGetApiPrices = () => {\r\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\r\n  return prices\r\n}\r\n\r\nexport const useGetApiPrice = (address: string) => {\r\n  const prices = useGetApiPrices()\r\n\r\n  if (!prices) {\r\n    return null\r\n  }\r\n\r\n  return prices[address.toLowerCase()]\r\n}","import { Container, Image, Nav, Navbar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '../button/Button';\r\nimport './Header.scss';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport UserDropDown from './UserDropDown';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { useProfile } from '../../state/hooks';\r\nimport { truncateWalletString } from '../../utils/index';\r\nimport { ethers } from 'ethers';\r\nimport Logo from './Logo';\r\n\r\nconst Header = () => {\r\n  const { login } = useAuth();\r\n  const [loginStatus, setLoginStatus] = useState(false);\r\n  const history = useHistory();\r\n\r\n  function goToUpload() {\r\n    history.push('/upload');\r\n  }\r\n  let userName = '';\r\n  let userAvatar = '/img/user-icon.svg';\r\n\r\n  const context = useWeb3React<Web3Provider>();\r\n  const { connector, library, chainId, account, active } = context;\r\n\r\n  const { profile } = useProfile();\r\n\r\n  let [etherBalance, setEtherBalance] = useState('0.00');\r\n  useEffect(() => {\r\n    const isLoggedin = account && active && chainId === parseInt(process.env.REACT_APP_NETWORK_ID, 10);\r\n    if (isLoggedin) {\r\n      library.getBalance(account).then(balance => {\r\n        const etherVal = parseFloat(ethers.utils.formatEther(balance));\r\n        setEtherBalance(etherVal.toFixed(4));\r\n      });\r\n    }\r\n    setLoginStatus(isLoggedin);\r\n  }, [connector, library, account, active, chainId, profile]);\r\n\r\n  if (profile) {\r\n    userName = profile.username ? profile.username : truncateWalletString(profile.walletAddress);\r\n    userAvatar = profile.userAvatarUrl ? profile.userAvatarUrl : '/img/user-icon.svg';\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"sm\" variant=\"dark\" className=\"header-nav\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <Logo />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end mb-2 mb-sm-0\">\r\n          <Nav>\r\n            {/* <Link to=\"/\" className=\"nav-link\">\r\n              Home\r\n            </Link>\r\n            <Link to=\"/upload\" className=\"nav-link\">\r\n              MarketPlaces\r\n            </Link>\r\n            <Link to=\"/profile/detail\" className=\"nav-link\">\r\n              Artist\r\n            </Link>\r\n            <Link to=\"/profile/detail\" className=\"nav-link\">\r\n              Edition\r\n            </Link> */}\r\n            <Nav.Item>\r\n              <div className=\"connection-action\">\r\n                {!(loginStatus && profile) && (\r\n                  <Button label=\"Connect Wallet\" variant=\"outline-primary\" onClick={login} />\r\n                )}\r\n                {loginStatus && profile && (\r\n                  <div className=\"connect-action\">\r\n                    <Button label=\"CREATE\" gradientDir=\"right\" variant=\"primary\" onClick={goToUpload} />\r\n                    <UserDropDown\r\n                      userName={userName}\r\n                      userAvatar={userAvatar}\r\n                      balance={etherBalance}\r\n                      walletAddress={account}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Image } from 'react-bootstrap';\r\nimport './ProfileImage.scss';\r\nimport { ProfileImageProps } from '../../Type';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst ProfileImage = (props: ProfileImageProps) => {\r\n  const [fileImg, setFileImg] = useState<string>(props.img || '/img/default-profile.png');\r\n\r\n  useEffect(() => {\r\n    setFileImg(props.img || '/img/default-profile.png');\r\n  }, [props.img]);\r\n\r\n  const onChangeFile = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.onChange && props.onChange(e);\r\n    e.target.files.length > 0 && setFileImg(URL.createObjectURL(e.target.files[0]));\r\n  };\r\n\r\n  return (\r\n    <div className={`profile`}>\r\n      <div className=\"profile-block\">\r\n        <Image className=\"profile-img\" src={fileImg} />\r\n        {props.verified === true && <Image className=\"tick-icon\" src=\"/img/tick.svg\" />}\r\n\r\n        {props.edit && (\r\n          <div className=\"profile-file-overlay\">\r\n            <label className=\"profile-file-buttton\" htmlFor=\"profile-file-input\">\r\n              Edit\r\n              <input type=\"file\" id=\"profile-file-input\" className=\"profile-file-input\" onChange={onChangeFile} />\r\n            </label>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileImage;\r\n","import InfoText from 'components/Text';\r\nimport ProfileImage from 'components/profile/ProfileImage';\r\nimport { Card, Col, Image, Row, Button } from 'react-bootstrap';\r\nimport './index.scss';\r\nimport IconButton from 'components/button/icon';\r\nimport { Product } from './Product';\r\nimport ButtonGroup from '../../buttonGroup/index';\r\nimport Rating from 'react-rating';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStarHalfAlt, faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { useProfileForWallet } from '../../../state/hooks';\r\nimport { NFTObjectData } from '../../../hooks/useApi';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport interface ProductCardPropsType {\r\n  product: NFTObjectData;\r\n  title?: string;\r\n  onClick?: () => void;\r\n  hidePrice?: boolean;\r\n}\r\n\r\nconst ProductCard = ({ product, onClick, hidePrice }: ProductCardPropsType) => {\r\n  const { profile } = useProfileForWallet(product.initialCreatorAddress);\r\n\r\n  const history = useHistory();\r\n\r\n  function ItemRating({ rating }) {\r\n    return (\r\n      <div className=\"rating\">\r\n        {rating}\r\n        <Rating emptySymbol={<FontAwesomeIcon icon={faStarHalfAlt} />} fullSymbol={<FontAwesomeIcon icon={faStar} />} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function goToProductDetails() {\r\n    history.push(`/details/${product.baseID}`);\r\n  }\r\n\r\n  function ItemPrice({ price }) {\r\n    return <div className=\"product-price\">{price} BNB</div>;\r\n  }\r\n  return (\r\n    <Card className=\"product-card\">\r\n      <div className=\"click-effect\" onClick={goToProductDetails}>\r\n        <div className=\"header click-effect\" onClick={onClick}>\r\n          <Card.Img variant=\"top\" src={product.image} />\r\n        </div>\r\n        <Row className=\"user-area align-items-center my-2 mx-0\">\r\n          <Col xs=\"auto\">\r\n            <ProfileImage img={profile && (profile.userAvatarUrl || '/img/default-profile.png')} />\r\n          </Col>\r\n          <Col className=\"pl-0\">\r\n            <InfoText className=\"name m-0 text-truncate\">{product.name}</InfoText>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      {product.price && !hidePrice && (\r\n        <Card.Footer>\r\n          <Row className=\"action-area align-items-center m-0\">\r\n            <Col xl=\"12\" md=\"12\">\r\n              <ButtonGroup\r\n                btn1Label={<ItemPrice price={product.price} />}\r\n                btn2Label={'Buy Now'}\r\n                btn1Prefix=\"Price\"\r\n                onClick={goToProductDetails}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\nexport default ProductCard;\r\n","import { Button } from 'components/button/Button';\r\nimport CheckButton from 'components/button/check';\r\nimport InfoText from 'components/Text';\r\nimport { Card, Col, Container, Form, FormControl, Image, InputGroup, Row } from 'react-bootstrap';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport './index.scss';\r\n\r\ninterface VisualPropsType {\r\n  svg: string;\r\n  style: any;\r\n}\r\nconst VisualSVG = (props: VisualPropsType) => {\r\n  return <Image src={props.svg} style={props.style} />;\r\n};\r\n\r\nconst HomeHeader = () => {\r\n  const {\r\n    control,\r\n    formState: { errors },\r\n    handleSubmit,\r\n  } = useForm();\r\n\r\n  return (\r\n    <div className=\"mb-10\">\r\n      <div className=\"home-header-card\">\r\n        <InfoText size=\"lg\" className=\"home-header-text mb-5\">\r\n          The first of NFT marketplace on <br /> Binance Smart Chain\r\n        </InfoText>\r\n        <InfoText size=\"xl\" className=\"sub-heading text-center\">\r\n          Fast transaction speed, low transaction fees, powerful reward tokens\r\n        </InfoText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default HomeHeader;\r\n","import './index.scss';\r\nexport default function Category({ title, children }) {\r\n  return (\r\n    <div className=\"category\">\r\n      {title && <h3>{title}</h3>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import IconButton from 'components/button/icon';\r\nimport InfoText from 'components/Text';\r\nimport { NFTUser } from 'hooks/useApi';\r\nimport { Col, Container, Image, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\ninterface PropsType {\r\n  fill?: string;\r\n  label?: boolean;\r\n  profile?: NFTUser;\r\n}\r\nconst SocialButtons = ({ fill = '#0f0237', label = false, profile }: PropsType) => {\r\n  return (\r\n    <Row className=\"social-buttons\">\r\n      <a href={profile?.twitterUrl} target=\"_blank\">\r\n        <div className=\"d-flex align-items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16.721\" height=\"14.12\" viewBox=\"0 0 16.721 14.12\">\r\n            <path\r\n              id=\"input-twitter\"\r\n              d=\"M32.721,18.671a6.647,6.647,0,0,1-1.971.561,3.549,3.549,0,0,0,1.508-1.972,6.714,6.714,0,0,1-2.178.865A3.365,3.365,0,0,0,27.576,17a3.536,3.536,0,0,0-3.342,4.376,9.622,9.622,0,0,1-7.071-3.724,3.655,3.655,0,0,0,1.062,4.759,3.321,3.321,0,0,1-1.554-.446A3.538,3.538,0,0,0,19.423,25.5a3.31,3.31,0,0,1-1.549.061,3.453,3.453,0,0,0,3.2,2.476A6.717,6.717,0,0,1,16,29.518a9.453,9.453,0,0,0,5.258,1.6c6.369,0,9.968-5.59,9.75-10.6a7.131,7.131,0,0,0,1.712-1.845\"\r\n              transform=\"translate(-16 -17)\"\r\n              fill={fill}\r\n            />\r\n          </svg>\r\n          {label && <span className=\"social-label ml-2\">Twitter</span>}\r\n        </div>\r\n      </a>\r\n\r\n      <a href={profile?.instagramUrl} target=\"_blank\">\r\n        <div className=\" d-flex align-items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16.72\" height=\"16.72\" viewBox=\"0 0 16.72 16.72\">\r\n            <path\r\n              id=\"input-instagram\"\r\n              d=\"M27.739,16a4.987,4.987,0,0,1,4.976,4.759l0,.222v6.758a4.987,4.987,0,0,1-4.759,4.976l-.222,0H20.981A4.987,4.987,0,0,1,16,27.961l0-.222V20.981A4.987,4.987,0,0,1,20.759,16l.222,0ZM24.36,20.644a3.716,3.716,0,0,0,0,7.431c2.049,0,3.716-3.716,3.716-3.716S26.409,20.644,24.36,20.644ZM29,17.765A1.034,1.034,0,1,0,30.039,18.8,1.034,1.034,0,0,0,29,17.765Z\"\r\n              transform=\"translate(-16 -16)\"\r\n              fill={fill}\r\n            />\r\n          </svg>\r\n          {label && <span className=\"social-label ml-2\">GitHub-alt</span>}\r\n        </div>\r\n      </a>\r\n\r\n      <a href={profile?.youtubeUrl} target=\"_blank\">\r\n        <div className=\" d-flex align-items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16.72\" height=\"12.92\" viewBox=\"0 0 16.72 12.92\">\r\n            <path\r\n              id=\"input-youtube\"\r\n              d=\"M21.456,16c.579.006,3.649.046,5.756.2a2.193,2.193,0,0,1,1.672.763,4.368,4.368,0,0,1,.663,1.821,29.919,29.919,0,0,1,.173,3h0v1.38c0,1.468-.173,2.966-.173,2.966a4.368,4.368,0,0,1-.663,1.821,2.308,2.308,0,0,1-1.672.763c-1.993.175-4.848.2-5.641.2H21.29c-.29,0-1.438-.013-2.652-.041l-.385-.009c-1.027-.027-2.041-.067-2.572-.125a2.743,2.743,0,0,1-1.845-.793,4.368,4.368,0,0,1-.663-1.821A28.956,28.956,0,0,1,13,23.165V21.618c.012-1.44.172-2.829.172-2.829a3.971,3.971,0,0,1,.663-1.821,2.308,2.308,0,0,1,1.672-.763c2.107-.159,5.177-.2,5.756-.2Zm-2.114,3.493v6.372s5.477-1.52,5.477-3.113S19.342,19.494,19.342,19.494Z\"\r\n              transform=\"translate(-13 -16.001)\"\r\n              fill={fill}\r\n            />\r\n          </svg>\r\n          {label && <span className=\"social-label ml-2\">You Tube</span>}\r\n        </div>\r\n      </a>\r\n\r\n      <a href={profile?.telegramUrl} target=\"_blank\">\r\n        <div className=\" d-flex align-items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16.72\" height=\"13.933\" viewBox=\"0 0 16.72 13.933\">\r\n            <path\r\n              id=\"telegram\"\r\n              d=\"M1.149,6q6.732-2.949,8.979-3.889C14.4.321,15.292.01,15.871,0a1.009,1.009,0,0,1,.6.18A.653.653,0,0,1,16.687.6a2.753,2.753,0,0,1,.026.609c-.232,2.448-1.234,8.389-1.744,11.13-.216,1.16-.641,1.549-1.052,1.587-.894.083-1.573-.594-2.439-1.165-1.355-.893-2.121-1.449-3.436-2.321-1.52-1.007-.535-1.561.332-2.466.227-.237,4.166-3.84,4.242-4.167a.318.318,0,0,0-.072-.274.353.353,0,0,0-.319-.031q-.2.047-6.494,4.316a2.913,2.913,0,0,1-1.67.62,10.937,10.937,0,0,1-2.393-.569C.7,7.555-.063,7.389,0,6.854Q.056,6.435,1.149,6Z\"\r\n              fill={fill}\r\n            />\r\n          </svg>\r\n          {label && <span className=\"social-label ml-2\">Telegram</span>}\r\n        </div>\r\n      </a>\r\n    </Row>\r\n  );\r\n};\r\nexport default SocialButtons;\r\n","import InfoText from 'components/Text';\r\nimport { Image, Container } from 'react-bootstrap';\r\nimport './index.scss';\r\nimport Category from '../category/index';\r\nimport { useGetNFTTopArtists, NFTTopArtist } from '../../../hooks/useApi';\r\nimport { useHistory } from 'react-router';\r\nimport ProfileImage from 'components/profile/ProfileImage';\r\nimport SocialButtons from '../../../components/socialButtons/index';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\ninterface ArtistProfileCardPropsType {\r\n  artist: NFTTopArtist;\r\n  onSelect?: (artist: NFTTopArtist) => void;\r\n}\r\n\r\nfunction RenderArtist({ artist, onSelect }: ArtistProfileCardPropsType) {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"artist-wrapper\" onClick={() => history.push(`/creatorDetail/${artist.user.walletAddress}`)}>\r\n      <ProfileImage img={artist.user.userAvatarUrl || '/img/default-profile.png'} />\r\n      <h4 className=\"w-100 text-truncate\">{artist.user.username}</h4>\r\n      <InfoText className=\"mb-1\">{artist.soldAmount} BNB</InfoText>\r\n      <SocialButtons fill=\"#00a0d2\" profile={artist?.user} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Artist() {\r\n  const topArtistList = useGetNFTTopArtists();\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    // initialSlide: 1,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n        }\r\n      }\r\n\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"artists-wrapper\">\r\n      <Container>\r\n        <Category title=\"Brands and Artists\">\r\n          <div className=\"artists\">\r\n            <Slider {...settings}>\r\n              {topArtistList?.map((artist, i) => (\r\n                <RenderArtist key={i} artist={artist} />\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </Category>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { baseApiUrl } from 'utils';\r\n\r\n/* eslint-disable camelcase */\r\n\r\nexport interface NFTList {\r\n  nfts: NFTObjectData[],\r\n  total_count: number\r\n}\r\nexport interface NFTObjectData {\r\n  baseID?: string;\r\n\r\n  name: string;\r\n  description: string;\r\n  price: string;\r\n  image: string;\r\n\r\n  mintTransactionHash?: string;\r\n  updatedAt?: number;\r\n  createdAt?: number;\r\n  initialCreatorAddress?: string;\r\n  ownerAddress?: string;\r\n  tokenID?: number;\r\n\r\n  voteCount?: number;\r\n  listed?: boolean;\r\n  attributes?: [];\r\n  category?: [];\r\n\r\n  approved?: boolean;\r\n  verified?: boolean;\r\n}\r\n\r\nexport interface NFTUser {\r\n  userBio: string;\r\n  username: string;\r\n  banned: boolean;\r\n  verified: boolean;\r\n  walletAddress: string;\r\n  accountCreatedAt: Date;\r\n  updatedAt: Date;\r\n  userAvatarUrl: string;\r\n  userBackgroupUrl: string;\r\n\r\n  socialUrl: string;\r\n  websiteUrl: string;\r\n  twitterUrl: string;\r\n  instagramUrl: string;\r\n  telegramUrl: string,\r\n  discordUrl: string,\r\n  youtubeUrl: string,\r\n  facebookUrl: string,\r\n  tiktokUrl: string,\r\n  dribbleUrl: string,\r\n  behanceUrl: string,\r\n}\r\n\r\nexport interface NFTEvent {\r\n  doneOn: number;\r\n  eventType: number;\r\n  nftIDSold: number;\r\n  transactionHash: string;\r\n\r\n  minter: string;\r\n\r\n  seller: string;\r\n  buyer: string;\r\n  nftSoldAtPrice: number;\r\n\r\n  priceUpdater: string;\r\n  newNftPrice: number;\r\n  oldNftPrice: number;\r\n}\r\n\r\nexport interface NFTDetail {\r\n  nft: NFTObjectData;\r\n  creator: NFTUser;\r\n  owner: NFTUser;\r\n  historyEvents: NFTEvent[];\r\n  relatedNFTs: NFTObjectData[];\r\n}\r\n\r\nexport interface NFTUserFullDetail {\r\n  user_profile: NFTUser;\r\n  userNfts: {\r\n    createdNfts: NFTObjectData[];\r\n    currentNfts: NFTObjectData[];\r\n    boughtNfts: NFTObjectData[];\r\n    soldNfts: NFTObjectData[];\r\n  };\r\n}\r\n\r\nexport interface NFTTopArtist {\r\n  user: NFTUser;\r\n  soldAmount: number;\r\n  createdNFTs: NFTObjectData[];\r\n}\r\n\r\nexport const useGetNFTList = ({ start, count, category = '', sort_field = '', sort_order = '' }) => {\r\n  const [data, setData] = useState<NFTList>();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const strUrl = `${baseApiUrl}/nfts?start=${start}&count=${count}&category=${category}&sort_field=${sort_field}&sort_order=${sort_order}`;\r\n        const response = await fetch(strUrl);\r\n        const responseData = await response.json();\r\n        if (responseData.status === 'success') {\r\n          const nftObjectList: NFTList = responseData;\r\n          setData(nftObjectList);\r\n        }\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [setData, start, count, category, sort_field, sort_order]);\r\n\r\n  return data;\r\n};\r\n\r\nexport const useGetNFTDetail = baseID => {\r\n  const [data, setData] = useState<NFTDetail>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const strUrl = `${baseApiUrl}/nfts/${baseID}`;\r\n        const response = await fetch(strUrl);\r\n        const responseData = await response.json();\r\n        if (responseData.status === 'success') {\r\n          const nftDetail: NFTDetail = responseData.nftDetail;\r\n          setData(nftDetail);\r\n        }\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [setData, baseID]);\r\n\r\n  return data;\r\n};\r\n\r\nexport const useGetUserList = () => {\r\n  const [data, setData] = useState<NFTUser[]>();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const strUrl = `${baseApiUrl}/users`;\r\n        const response = await fetch(strUrl);\r\n        const responseData = await response.json();\r\n        if (responseData.status === 'success') {\r\n          const userList: NFTUser[] = responseData.users;\r\n          setData(userList);\r\n        }\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [setData]);\r\n\r\n  return data;\r\n};\r\n\r\nexport const useGetNFTTopArtists = () => {\r\n  const [data, setData] = useState<NFTTopArtist[]>();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const strUrl = `${baseApiUrl}/top_users`;\r\n        const response = await fetch(strUrl);\r\n        const responseData = await response.json();\r\n        if (responseData.status === 'success') {\r\n          const nftTopArtists: NFTTopArtist[] = responseData.data;\r\n          setData(nftTopArtists);\r\n        }\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [setData]);\r\n\r\n  return data;\r\n};\r\n\r\nexport const useGetNFTUserFullDetail = walletAddress => {\r\n  const [data, setData] = useState<NFTUserFullDetail>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const strUrl = `${baseApiUrl}/user_nfts/${walletAddress}`;\r\n        const response = await fetch(strUrl);\r\n        const responseData = await response.json();\r\n        if (responseData.status === 'success') {\r\n          const nftUserFullDetail: NFTUserFullDetail = responseData.data;\r\n          setData(nftUserFullDetail);\r\n        }\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [setData, walletAddress]);\r\n\r\n  return data;\r\n};\r\n\r\nexport const useGetNFTUserProfile = walletAddress => {\r\n  const [data, setData] = useState<NFTUser>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const strUrl = `${baseApiUrl}/users/${walletAddress}`;\r\n        const response = await fetch(strUrl);\r\n        const responseData = await response.json();\r\n        if (responseData.status === 'success') {\r\n          const nftUser: NFTUser = responseData.user_profile;\r\n          setData(nftUser);\r\n        }\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [setData, walletAddress]);\r\n\r\n  return data;\r\n};\r\n","export const Home_List = {\r\n  size: 6,\r\n};\r\n","import './index.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport ProductCard from '../../components/cards/product';\r\nimport { CardDeck, Col, Container, Form, Image, Row } from 'react-bootstrap';\r\nimport HomeHeader from './header';\r\nimport Dialog from 'components/modal';\r\nimport { Button } from '../../components/button/Button';\r\nimport Creators from './creators.json';\r\nimport productList from './productList.json';\r\nimport InfoText from 'components/Text';\r\nimport Category from './category';\r\nimport CreatorCard from '../../components/cards/creator';\r\nimport { useHistory } from 'react-router';\r\nimport Artist from './artist';\r\nimport { Home_List } from './constant';\r\nimport { useGetNFTList, NFTObjectData } from '../../hooks/useApi';\r\n\r\nconst HomePage = () => {\r\n  const [isFilterModal, setFilterModal] = useState(false);\r\n  const [start, setStart] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [category, setCategory] = useState('');\r\n  const [sortField, setSortField] = useState('');\r\n  const [sortOrder, setSortOrder] = useState('');\r\n\r\n  const [NFTObjectList, setNFTObjectList] = useState<NFTObjectData[]>([]);\r\n\r\n  const history = useHistory();\r\n\r\n  function isAlreadyAdded(item: NFTObjectData) {\r\n    return NFTObjectList?.find(list => list.baseID === item.baseID);\r\n  }\r\n\r\n  const items = useGetNFTList({\r\n    start,\r\n    count: Home_List.size,\r\n    category: category,\r\n    sort_field: sortField,\r\n    sort_order: sortOrder,\r\n  });\r\n\r\n  // console.log(NFTObjectList);\r\n  // console.log(items);\r\n\r\n  useEffect(() => {\r\n    setStart(0);\r\n    setNFTObjectList([]);\r\n  }, [category, sortField, sortOrder]);\r\n\r\n  useEffect(() => {\r\n    if (items?.nfts?.length) {\r\n      const newNFTObjectList = [...NFTObjectList];\r\n      if (!items?.nfts.find(item => isAlreadyAdded(item))) {\r\n        newNFTObjectList.push(...items.nfts);\r\n        setLoading(false);\r\n      }\r\n      setNFTObjectList(newNFTObjectList);\r\n    }\r\n  }, [items]);\r\n\r\n  function loadMoreItem() {\r\n    setLoading(true);\r\n    setStart(start + Home_List.size);\r\n  }\r\n\r\n  function renderLoadMore() {\r\n    if (items?.total_count > NFTObjectList.length) {\r\n      return (\r\n        <Row>\r\n          <Col className=\"text-center load-more-action\">\r\n            <Button\r\n              label=\"Load More\"\r\n              variant=\"primary\"\r\n              onClick={loadMoreItem}\r\n              isLoading={loading}\r\n              loadingMessage=\"Loading...\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"home-page\">\r\n      <HomeHeader />\r\n      <Container>\r\n        <Category title=\"\">\r\n          <Row className=\"category--item\">\r\n            {NFTObjectList.map(item => (\r\n              <Col xl=\"4\" md=\"4\">\r\n                <ProductCard product={item} onClick={() => console.log('card clicked !', item)} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Category>\r\n      </Container>\r\n      {/* <div className=\"creators\">\r\n        <Container>\r\n          <Category title=\"Feature creators\">\r\n            <Row className=\"category--item\">\r\n              {NFTObjectList.map(item => (\r\n                <Col xl=\"4\" md=\"4\">\r\n                  <CreatorCard\r\n                    image={item.image}\r\n                    // userAvatar={item?.userAvatar}\r\n                    // count={item?.count}\r\n                    // userName={item?.userName}\r\n                    // userHandle={item?.userHandle}\r\n                    // info={item?.info}\r\n                    onClick={creatorClick}\r\n                  />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </Category>\r\n        </Container>\r\n      </div> */}\r\n      {renderLoadMore()}\r\n      <Artist />\r\n    </div>\r\n  );\r\n};\r\nexport default HomePage;\r\n","import { InputType } from '../../Type';\r\nimport { useState } from 'react';\r\nimport './index.scss';\r\nexport default function Input({\r\n  label,\r\n  type,\r\n  placeholder,\r\n  name,\r\n  postfix,\r\n  onChange,\r\n  value,\r\n  className,\r\n  register = null,\r\n}: InputType) {\r\n  const [inputValue, setInputValue] = useState(value);\r\n\r\n  function onChangeHandler(event) {\r\n    const value = event.target.value;\r\n    setInputValue(value);\r\n    if (onChange) onChange(value);\r\n  }\r\n  return (\r\n    <div className={`input-wrapper ${className}`}>\r\n      {label && <label>{label}</label>}\r\n      <input\r\n        type={type}\r\n        value={inputValue}\r\n        placeholder={placeholder}\r\n        onChange={onChangeHandler}\r\n        {...(register && register(name, { required: false }))}\r\n      />\r\n      {postfix && <span className=\"postfix\">{postfix}</span>}\r\n    </div>\r\n  );\r\n}\r\n","import InfoText from 'components/Text';\r\nimport { any, string } from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport { FileInputProps } from 'Type';\r\nimport './index.scss';\r\n\r\nconst FileInput = ({ info, label, dispalyImage, defaultImage, onChange }: FileInputProps) => {\r\n  const [fileImg, setFileImg] = useState<string>(defaultImage);\r\n\r\n  useEffect(() => {\r\n    setFileImg(defaultImage);\r\n  }, [defaultImage]);\r\n\r\n  const onChangeFile = (e: any) => {\r\n    onChange && onChange(e);\r\n    e.target.files.length > 0 && setFileImg(URL.createObjectURL(e.target.files[0]));\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-box\">\r\n      <div className=\"file-overlay\">\r\n        {info && !fileImg && <InfoText variant=\"secondary\">{info}</InfoText>}\r\n        <label className=\"file-buttton\" htmlFor=\"file-input\">\r\n          {label}\r\n          <input type=\"file\" id=\"file-input\" onChange={onChangeFile} />\r\n        </label>\r\n      </div>\r\n      {fileImg && dispalyImage && <Image className=\"file-bg\" src={fileImg} fluid />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileInput;\r\n","import axios from 'axios';\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n//axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\r\nclass API {\r\n\r\n    constructor() {\r\n        //console.log('created!');\r\n    }\r\n\r\n    public get = (path: string) => {\r\n        return new Promise((resole, reject) => {\r\n            axios.get(path)\r\n                .then(function (response) {\r\n                    //console.log(response.data, response.status, response.statusText);\r\n                    response.status === 200 ? resole(response.data) : reject(new Error(response.statusText));\r\n                })\r\n                .catch(function (error) {\r\n                    //console.log(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    public post = (path: string, data: any) => {\r\n        return new Promise((resole, reject) => {\r\n            axios.post(path, data)\r\n                .then(function (response) {\r\n                    //console.log(response.data, response.status, response.statusText);\r\n                    response.status === 200 ? resole(response.data) : reject(new Error(response.statusText));\r\n                })\r\n                .catch(function (error) {\r\n                    //console.log(error);\r\n                    reject(error);\r\n                });\r\n        })\r\n    }\r\n\r\n    public apiUrl = process.env.REACT_APP_API_URL;\r\n\r\n}\r\nexport default new API();","import { useEffect, useState } from 'react';\r\nimport { Col, Container, Image, Nav, Row, Tab, Tabs } from 'react-bootstrap';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { Button } from '../../../components/button/Button';\r\nimport ProfileImage from '../../../components/profile/ProfileImage';\r\nimport SocialButtons from '../../../components/socialButtons';\r\nimport { CreatorObj, CreatorObj2 } from '../../../Type';\r\nimport './index.scss';\r\nimport InfoText from '../../../components/Text/index';\r\nimport Input from '../../../components/Input';\r\nimport { useForm } from 'react-hook-form';\r\nimport FileInput from 'components/Input/file';\r\nimport IconButton from 'components/button/icon';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { useProfile } from '../../../state/hooks';\r\nimport toast from 'react-hot-toast';\r\nimport { readFileAsync, getImageIpfsHash } from '../../../utils/ipfs';\r\nimport API from 'utils/api';\r\nimport { truncateWalletString } from '../../../utils/index';\r\n\r\nexport default function ProfileEdit() {\r\n  const [loginStatus, setLoginStatus] = useState(false);\r\n  const { connector, library, chainId, account, active } = useWeb3React<Web3Provider>();\r\n  const { profile } = useProfile();\r\n  const [avatarImage, setAvatarImage] = useState(null);\r\n  const [backgroundImage, setBackgroundImage] = useState(null);\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const Socials = [\r\n    // { label: 'Website', icon: '/img/earth.svg', value: profile && profile.websiteUrl },\r\n    { label: 'Twitter', icon: '/img/social/twitter.svg', value: profile && profile.twitterUrl },\r\n    { label: 'Instagram', icon: '/img/social/instagram.svg', value: profile && profile.instagramUrl },\r\n    { label: 'Telegram', icon: '/img/social/telegram.svg', value: profile && profile.telegramUrl },\r\n\r\n    // { label: 'Discord', icon: '/img/social/discord.svg', value: profile && profile.discordUrl },\r\n    { label: 'Youtube', icon: '/img/social/youtube.svg', value: profile && profile.youtubeUrl },\r\n    // { label: 'Facebook', icon: '/img/social/facebook.svg', value: profile && profile.facebookUrl },\r\n    // { label: 'TikTok', icon: '/img/social/tiktok.svg', value: profile && profile.tiktokUrl },\r\n    // { label: 'Dribbble', icon: '/img/social/dribbble.svg', value: profile && profile.dribbleUrl },\r\n    // { label: 'Behance', icon: '/img/social/behance.svg', value: profile && profile.behanceUrl },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const isLoggedin = account && active && chainId === parseInt(process.env.REACT_APP_NETWORK_ID, 10);\r\n    setLoginStatus(isLoggedin);\r\n  }, [connector, library, account, active, chainId]);\r\n\r\n  const onSubmit = async data => {\r\n    // console.log(data);\r\n    if (!profile) {\r\n      toast.error('Profile Update Failed!');\r\n      return;\r\n    }\r\n\r\n    if (!loginStatus) {\r\n      toast.error('Please connect Metamask Correctly!');\r\n      return;\r\n    }\r\n\r\n    if (!data.username || !data.user_bio) {\r\n      toast.error('Please Input Profile Details Correctly!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      var user_avatar_url = profile.userAvatarUrl;\r\n      var user_background_url = profile.userBackgroupUrl;\r\n\r\n      if (avatarImage) {\r\n        const buffer = await readFileAsync(avatarImage);\r\n        const hash = await getImageIpfsHash(buffer);\r\n        user_avatar_url = `https://ipfs.io/ipfs/${hash}`;\r\n      }\r\n\r\n      if (backgroundImage) {\r\n        const buffer = await readFileAsync(backgroundImage);\r\n        const hash = await getImageIpfsHash(buffer);\r\n        user_background_url = `https://ipfs.io/ipfs/${hash}`;\r\n      }\r\n\r\n      data.wallet_address = profile.walletAddress;\r\n      data.social_url = '';\r\n      data.user_avatar_url = user_avatar_url;\r\n      data.user_background_url = user_background_url;\r\n\r\n      // console.log(data);\r\n      API.post('/update_nft_user_profile', data)\r\n        .then(res => {\r\n          toast.success('Your Profile Updated!');\r\n        })\r\n        .catch(error => {\r\n          toast.error('Profile Update Failed!');\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    } catch (error) {\r\n      toast.error('Profile Update Failed!');\r\n    }\r\n  };\r\n\r\n  const onBannerChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files.length) {\r\n      setBackgroundImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onUserAvatarChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files.length) {\r\n      setAvatarImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-edit\">\r\n      <Row className=\"banner\">\r\n        <FileInput\r\n          label=\"Edit\"\r\n          defaultImage={profile && profile.userBackgroupUrl}\r\n          dispalyImage={true}\r\n          info=\"We recommend to upload images in 1920 x 300 resolution\"\r\n          onChange={onBannerChange}\r\n        />\r\n      </Row>\r\n      <Container>\r\n        <div className=\"user-block\">\r\n          <ProfileImage img={profile && profile.userAvatarUrl} edit onChange={onUserAvatarChange} />\r\n          <InfoText variant=\"secondary\" size=\"sm\" className=\"mt-1\">\r\n            We recommend an image at least 120 X 120 resolution\r\n          </InfoText>\r\n\r\n          <Row>\r\n            <Col sm=\"4\">\r\n              <InfoText size=\"lg\" className=\"m-0 text-truncate\">\r\n                {profile && (profile.username || truncateWalletString(profile.walletAddress))}\r\n              </InfoText>\r\n              <Row>\r\n                <Col xs=\"auto\" className=\"pr-0\">\r\n                  <InfoText variant=\"secondary\" size=\"md\" className=\"mb-2\">\r\n                    {profile && profile.userBio}\r\n                  </InfoText>\r\n                </Col>\r\n                {/* <Col xs=\"auto\" className=\"pl-0\">\r\n                  <IconButton icon=\"/img/copy.svg\" rounded />\r\n                </Col> */}\r\n              </Row>\r\n              {/* <SocialButtons /> */}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 pt-3 pb-3\">\r\n          <Row>\r\n            <Col sm=\"5\" className=\"text-center\">\r\n              <InfoText size=\"md\" className=\"mb-1 mt-3 text-left\">\r\n                Display Name\r\n              </InfoText>\r\n              <Input name=\"username\" placeholder={profile?.username} register={register} />\r\n              <InfoText size=\"md\" className=\"mb-1 mt-3 text-left\">\r\n                Add Bio\r\n              </InfoText>\r\n              <textarea placeholder={profile?.userBio} {...register('user_bio', { required: false })} />\r\n              <Button\r\n                className=\"mt-3 d-none d-sm-block\"\r\n                isLoading={loading}\r\n                type=\"submit\"\r\n                variant=\"primary\"\r\n                label=\"Save Changes\"\r\n              />\r\n            </Col>\r\n            <Col xs=\"1\"></Col>\r\n            <Col sm=\"6\" className=\"socials text-center mt-5 mt-sm-0\">\r\n              <InfoText className=\"details text-left\">\r\n                Add links to your <br />\r\n                social media profile\r\n              </InfoText>\r\n              {Socials.map((social, index) => (\r\n                <Row key={index} className=\"align-items-end mb-3\">\r\n                  <Col xs=\"auto\" sm=\"auto\" className=\"mb-0\">\r\n                    <img className=\"svg-img\" src={social.icon} />\r\n                  </Col>\r\n                  <Col xs=\"auto\" sm=\"2\" className=\"pl-0 mb-0\">\r\n                    <InfoText size=\"md\" className=\"m-0\">\r\n                      {social.label}\r\n                    </InfoText>\r\n                  </Col>\r\n                  <Col xs=\"12\" sm=\"8\">\r\n                    <Input name={social.label} placeholder={social.value} register={register} />\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n              <Button\r\n                className=\"mt-3 d-sm-none\"\r\n                isLoading={loading}\r\n                type=\"submit\"\r\n                variant=\"primary\"\r\n                label=\"Save Changes\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\nfunction success(res: any): Function {\r\n  throw new Error('Function not implemented.');\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { Col, Container, Image, Nav, Row, Tab, Tabs } from 'react-bootstrap';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { Button } from '../../../components/button/Button';\r\nimport HomeCard from '../../../components/cards/home/HomeCard';\r\nimport InfoText from '../../../components/Text';\r\nimport ProfileImage from '../../../components/profile/ProfileImage';\r\nimport SocialButtons from '../../../components/socialButtons';\r\nimport './index.scss';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport ProductCard from 'components/cards/product';\r\nimport IconButton from 'components/button/icon';\r\nimport Collections from './collection.json';\r\nimport { useGetNFTUserFullDetail } from '../../../hooks/useApi';\r\nimport { useProfile } from '../../../state/hooks';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { truncateWalletString } from '../../../utils/index';\r\nimport moment from 'moment';\r\nimport ExternalViewLink from 'components/ExternViewLink';\r\n\r\nconst ProfileDetail = ({\r\n  match: {\r\n    params: { walletAddress },\r\n  },\r\n}: RouteComponentProps<{ walletAddress: string }>) => {\r\n  const history = useHistory();\r\n  let data = useLocation().state;\r\n  const [loginStatus, setLoginStatus] = useState(false);\r\n  const { connector, library, chainId, account, active } = useWeb3React<Web3Provider>();\r\n\r\n  const { profile } = useProfile();\r\n\r\n  useEffect(() => {\r\n    const isLoggedin = account && active && chainId === parseInt(process.env.REACT_APP_NETWORK_ID, 10);\r\n    setLoginStatus(isLoggedin);\r\n  }, [connector, library, account, active, chainId]);\r\n\r\n  const nftUserFullDetail = useGetNFTUserFullDetail(walletAddress);\r\n\r\n  // console.log(nftUserFullDetail);\r\n\r\n  if (!nftUserFullDetail || !nftUserFullDetail.user_profile) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-detail\">\r\n      <Row className=\"banner\">\r\n        <Image src={nftUserFullDetail?.user_profile?.userBackgroupUrl || '/img/c-bg-1.png'} fluid />\r\n      </Row>\r\n      <Container>\r\n        <div className=\"user-block\">\r\n          <ProfileImage img={nftUserFullDetail?.user_profile?.userAvatarUrl} />\r\n\r\n          {profile?.walletAddress.toLowerCase() === walletAddress.toLowerCase() && (\r\n            <Link to=\"/profile/edit\" className=\"align-self-end\">\r\n              <InfoText size=\"md\" variant=\"secondary\" className=\"d-inline-block m-0 edit-profile-link\">\r\n                <Image className=\"lang mb-2\" src=\"/img/edit.svg\" /> Edit profile\r\n              </InfoText>\r\n            </Link>\r\n          )}\r\n        </div>\r\n        <Row className=\"user-details\">\r\n          <Col xl=\"4\" md=\"4\" className=\"user-info\">\r\n            <Row>\r\n              <Col xs=\"9\" className=\"pr-0\">\r\n                <h2 className=\"m-0 w-100 text-truncate username\">\r\n                  {nftUserFullDetail.user_profile.username || truncateWalletString(walletAddress)}\r\n                </h2>\r\n              </Col>\r\n              <Col xs=\"3\"> {true && <Image src=\"/img/shield.png\" />}</Col>\r\n            </Row>\r\n\r\n            <h3>Bio</h3>\r\n            <InfoText variant=\"secondary\" size=\"md\" className=\"m-0\">\r\n              {nftUserFullDetail.user_profile.userBio}\r\n            </InfoText>\r\n            {/* <h3>Link</h3>\r\n            <InfoText variant=\"secondary\" size=\"md\" className=\"m-0\">\r\n              {nftUserFullDetail.user_profile.socialUrl}\r\n            </InfoText> */}\r\n            <InfoText variant=\"secondary\" size=\"md\" className=\"joined m-10\">\r\n              Joined {moment(nftUserFullDetail.user_profile.accountCreatedAt).format('MMM yyyy')}\r\n            </InfoText>\r\n            <SocialButtons profile={nftUserFullDetail.user_profile} />\r\n            {/* <ExternalViewLink eitherLink=\"\" IPFSLink=\"\" metadata=\"\" /> */}\r\n          </Col>\r\n          <Col className=\"mt-5\" xl=\"8\" md=\"8\">\r\n            <Tab.Container defaultActiveKey=\"collection\">\r\n              <Nav>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"collection\" className=\"title-font\">\r\n                    Collection\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"sold\" className=\"title-font\">\r\n                    Sold\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"created\" className=\"title-font\">\r\n                    Created\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"bought\" className=\"title-font\">\r\n                    Bought\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n              <Tab.Content>\r\n                <Tab.Pane eventKey=\"collection\">\r\n                  <Row>\r\n                    {nftUserFullDetail.userNfts.currentNfts?.map(collection => (\r\n                      <Col sm=\"4\" className=\"mb-5\">\r\n                        <ProductCard hidePrice={true} product={collection} />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"sold\">\r\n                  <Row>\r\n                    {nftUserFullDetail.userNfts.soldNfts?.map(collection => (\r\n                      <Col sm=\"4\" className=\"mb-5\">\r\n                        <ProductCard hidePrice={true} product={collection} />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"created\">\r\n                  <Row>\r\n                    {nftUserFullDetail.userNfts.createdNfts?.map(collection => (\r\n                      <Col sm=\"4\" className=\"mb-5\">\r\n                        <ProductCard hidePrice={true} product={collection} />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"bought\">\r\n                  <Row>\r\n                    {nftUserFullDetail.userNfts.boughtNfts?.map(collection => (\r\n                      <Col sm=\"4\" className=\"mb-5\">\r\n                        <ProductCard hidePrice={true} product={collection} />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Tab.Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileDetail;\r\n","import \"@ethersproject/shims\"\r\nimport { ethers } from \"ethers\";\r\nimport toast from \"react-hot-toast\";\r\nimport { getContractInfo, getContractObj } from \".\";\r\n\r\nexport function getNFTBscScanLink(tokenId) {\r\n    const contractInfo = getContractInfo('PAWZNFT', process.env.REACT_APP_NETWORK_ID);\r\n    return \"https://bscscan.com/token/\" + contractInfo?.address + \"?a=\" + tokenId;\r\n}\r\n\r\nexport async function mint(chainId, provider, tokenURI, nft_price) {\r\n    const nftContract = getContractObj('PAWZNFT', chainId, provider);\r\n    try {\r\n        const tx = await nftContract.mint(tokenURI, ethers.utils.parseEther(nft_price));\r\n        await tx.wait(1);\r\n\r\n        return tx.hash;\r\n    } catch (e) {\r\n        console.log(e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function buy(chainId, provider, tokenID, price) {\r\n    console.log({ chainId, provider, tokenID, price });\r\n    const nftContract = getContractObj('PAWZNFT', chainId, provider);\r\n    try {\r\n        const tx = await nftContract.buy(tokenID, {\r\n            value: ethers.utils.parseEther(price)\r\n        });\r\n        await tx.wait(1);\r\n\r\n        return tx.hash;\r\n    } catch (e) {\r\n        toast.error(e.message);\r\n        console.log(e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function updatePrice(chainId, provider, tokenID, nft_price) {\r\n    const nftContract = getContractObj('PAWZNFT', chainId, provider);\r\n    try {\r\n        const tx = await nftContract.updatePrice(tokenID, ethers.utils.parseEther(nft_price));\r\n        await tx.wait(1);\r\n\r\n        return tx.hash;\r\n    } catch (e) {\r\n        console.log(e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function updateListingStatus(chainId, provider, tokenID, shouldBeListed) {\r\n    const nftContract = getContractObj('PAWZNFT', chainId, provider);\r\n    try {\r\n        const tx = await nftContract.updateListingStatus(tokenID, shouldBeListed);\r\n        await tx.wait(1);\r\n\r\n        return tx.hash;\r\n    } catch (e) {\r\n        console.log(e);\r\n        return false;\r\n\r\n    }\r\n}\r\n\r\nexport async function burn(chainId, provider, tokenID) {\r\n    const nftContract = getContractObj('PAWZNFT', chainId, provider);\r\n    try {\r\n        const tx = await nftContract.burn(tokenID);\r\n        await tx.wait(1);\r\n\r\n        return tx.hash;\r\n    } catch (e) {\r\n        console.log(e);\r\n        return false;\r\n\r\n    }\r\n}\r\n","import FileInput from 'components/Input/file';\r\nimport { useState } from 'react';\r\nimport { Col, Image, Row } from 'react-bootstrap';\r\nimport { Button } from 'components/button/Button';\r\nimport FileUpload from 'components/FileUpload';\r\nimport InfoText from 'components/Text';\r\nimport Input from 'components/Input';\r\nimport './index.scss';\r\nimport CategoryCard from './category';\r\nimport 'react-toggle/style.css';\r\nimport Toggle from 'react-toggle';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInfinity, faHistory, faTags, faRegistered, faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { useHistory } from 'react-router';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { useProfile } from '../../state/hooks';\r\nimport { useForm } from 'react-hook-form';\r\nimport { readFileAsync, getImageIpfsHash } from '../../utils/ipfs';\r\nimport toast from 'react-hot-toast';\r\nimport API from 'utils/api';\r\nimport { mint } from 'utils/contracts';\r\nimport { ethers } from 'ethers';\r\n\r\nfunction Upload() {\r\n  const history = useHistory();\r\n\r\n  const { library, chainId, account } = useWeb3React<Web3Provider>();\r\n  const { profile } = useProfile();\r\n  const [nftImage, setNFTImage] = useState(null);\r\n  const [nftName, setNFTName] = useState('');\r\n  const [nftDecription, setNFTDecription] = useState('');\r\n  const [nftPrice, setNFTPrice] = useState('');\r\n  const [isLoading, setLoadingStatus] = useState(false);\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onBannerChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files.length) {\r\n      setNFTImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onChangeNFTName = value => {\r\n    // console.log(value);\r\n    setNFTName(value);\r\n  };\r\n\r\n  const onChangeNFTDescription = (e: any) => {\r\n    setNFTDecription(e.target.value);\r\n  };\r\n\r\n  const onChangeNFTPrice = value => {\r\n    setNFTPrice(value);\r\n  };\r\n\r\n  const submitAsset = async () => {\r\n    if (!nftImage) {\r\n      toast.error('Please select the Artist!');\r\n      return;\r\n    }\r\n\r\n    if (!account || !library) {\r\n      toast.error('Please connect your wallet correctly!');\r\n      return;\r\n    }\r\n\r\n    if (!profile) {\r\n      toast.error('Please login correctly!');\r\n      return;\r\n    }\r\n\r\n    if (!nftDecription || !nftPrice || !nftName) {\r\n      toast.error('Please Input All Details Correctly!');\r\n      return;\r\n    }\r\n\r\n    setLoadingStatus(true);\r\n    const load_toast_id = toast.loading('Please wait...');\r\n\r\n    try {\r\n      const buffer = await readFileAsync(nftImage);\r\n      const hash = await getImageIpfsHash(buffer);\r\n      const image_url = `https://ipfs.io/ipfs/${hash}`;\r\n\r\n      var formdata = new FormData();\r\n\r\n      formdata.append('nft_name', nftName);\r\n      formdata.append('nft_description', nftDecription);\r\n      formdata.append('nft_price', nftPrice);\r\n      formdata.append('image_url', image_url);\r\n      formdata.append('category', JSON.stringify([]));\r\n\r\n      var response: any = await API.post('/add_nft_metadata', formdata);\r\n\r\n      if (response.status === 'success') {\r\n        const base_id = response.base_id;\r\n\r\n        const tokenURI = `${API.apiUrl}/nfts/${base_id}`;\r\n        const txhash = await mint(chainId, library.getSigner(), tokenURI, nftPrice);\r\n\r\n        if (txhash !== false) {\r\n          await API.get('/sync_block');\r\n          toast.success('NFT Product is created successfully!');\r\n          setTimeout(() => {\r\n            history.push('/');\r\n          }, 3000);\r\n        } else {\r\n          toast.error('NFT Mint Failed!');\r\n        }\r\n      } else {\r\n        toast.error('NFT Artist Upload Failed!');\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    } finally {\r\n      setLoadingStatus(false);\r\n      toast.dismiss(load_toast_id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload\">\r\n      <Row>\r\n        <Col className=\"text-center\">\r\n          <h2 className=\"page-heading\">Create single Collectible</h2>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs=\"12\" sm={{ span: 8, offset: 2 }}>\r\n          <label className=\" mt-2\">Upload File</label>\r\n          <div className=\"file-container mt-2\">\r\n            <FileInput\r\n              label=\"Upload File\"\r\n              dispalyImage\r\n              info=\"PNG, GIF, JPEG, JPG (MAX 8 mb)\"\r\n              onChange={onBannerChange}\r\n              defaultImage={nftImage && URL.createObjectURL(nftImage)}\r\n            />\r\n          </div>\r\n\r\n          {/* <div className=\"fee\">\r\n            <Row>\r\n              <Col sm=\"12\" xl=\"6\" lg=\"12\" className=\"text-left\">\r\n                <InfoText size=\"md\" variant=\"secondary\">\r\n                  Service Fee <strong>2.5%</strong>\r\n                </InfoText>\r\n                <InfoText size=\"md\" variant=\"secondary\">\r\n                  You will receive\r\n                </InfoText>\r\n              </Col>\r\n            </Row>\r\n          </div> */}\r\n          <form>\r\n            <Input placeholder=\"NFT Name\" label=\"\" name=\"nft_name\" onChange={onChangeNFTName} />\r\n            <label>Description (Optional)</label>\r\n            <textarea\r\n              placeholder=\"NFT Description (max: 300 characters)\"\r\n              name=\"nft_description\"\r\n              onChange={onChangeNFTDescription}\r\n            />\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"NFT Price\"\r\n              label=\"\"\r\n              name=\"nft_price\"\r\n              postfix=\"BNB\"\r\n              onChange={onChangeNFTPrice}\r\n            />\r\n          </form>\r\n\r\n          <div className=\"submit text-center text-sm-left\">\r\n            <Button label=\"Create item\" variant=\"primary\" isLoading={isLoading} onClick={submitAsset} />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import InfoText from 'components/Text';\r\nimport './index.scss';\r\nimport { Button } from 'components/button/Button';\r\nimport { Card, Col, Form, Image, Nav, Row, Tab, Container } from 'react-bootstrap';\r\nimport ProfileImage from 'components/profile/ProfileImage';\r\nimport IconButton from 'components/button/icon';\r\nimport { useState, useEffect } from 'react';\r\nimport Input from 'components/Input';\r\nimport ProductHistory from '../history';\r\nimport { useHistory } from 'react-router';\r\nimport { buy, updateListingStatus, updatePrice } from 'utils/contracts';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\n\r\nconst ProductDetailHeader = ({ creatorBackgroupUrl, creatorAvatarUrl, creatorName }) => {\r\n  return (\r\n    <div className=\"product-details-header\">\r\n      <Row className=\"banner\">\r\n        <Image src={creatorBackgroupUrl || '/img/c-bg-1.png'} />\r\n      </Row>\r\n\r\n      <div className=\"banner-bottom\">\r\n        <Container className=\"position-relative\">\r\n          <Row className=\"user-block\">\r\n            <Col xs=\"auto\">\r\n              <ProfileImage img={creatorAvatarUrl} />\r\n            </Col>\r\n            <Col>\r\n              <Row>\r\n                <Col xs=\"8\" className=\"pr-0\">\r\n                  <h2 className=\"w-100 text-truncate\">{creatorName}</h2>\r\n                </Col>\r\n                <Col xs=\"4\">\r\n                  <Image className=\"text-end-icon\" src=\"/img/shield.png\" />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductDetailHeader;\r\n","import { useState, useEffect } from 'react';\r\nimport { useProfile, useProfileForWallet } from '../../../../state/hooks';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport toast from 'react-hot-toast';\r\n\r\nimport { baseApiUrl, truncateWalletString } from '../../../../utils/index';\r\nimport { updateListingStatus, updatePrice, buy } from 'utils/contracts';\r\nimport { Button } from '../../../../components/button/Button';\r\nimport Input from '../../../../components/Input/index';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { ethers } from 'ethers';\r\n\r\nexport default function ProductActions({ name, description, price, image, ownerAddress, tokenID, listed }) {\r\n  const [nftPrice, setNFTPrice] = useState(price);\r\n  const { profile: currentUserProfile } = useProfile();\r\n  const { profile: productOwnerProfile } = useProfileForWallet(ownerAddress);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [loginStatus, setLoginStatus] = useState<boolean>(false);\r\n\r\n  const { connector, library, chainId, account, active } = useWeb3React<Web3Provider>();\r\n\r\n  function isOwnsProduct() {\r\n    return ownerAddress === currentUserProfile?.walletAddress;\r\n  }\r\n\r\n  const updateNFTListingStatus = async () => {\r\n    if (!loginStatus) {\r\n      toast('Please connect correctly!');\r\n      return;\r\n    }\r\n    if (ownerAddress !== account.toLowerCase()) {\r\n      toast('You are not owner of this asset!');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const load_toast_id = toast.loading('Please wait...');\r\n    try {\r\n      const txhash = await updateListingStatus(chainId, library.getSigner(), tokenID, !listed);\r\n      if (txhash !== false) {\r\n        await fetch(`${baseApiUrl}/sync_block`);\r\n        toast.dismiss(load_toast_id);\r\n        toast.success('NFT Listing Updated Successfully!');\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 3000);\r\n      } else {\r\n        toast.dismiss(load_toast_id);\r\n        toast.error('NFT Listing Failed!');\r\n      }\r\n    } catch (error) {\r\n      toast.dismiss(load_toast_id);\r\n      toast.error('NFT Listing Failed!');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const updateNFTPrice = async () => {\r\n    if (!loginStatus) {\r\n      toast('Please connect correctly!');\r\n      return;\r\n    }\r\n    if (ownerAddress !== account.toLowerCase()) {\r\n      toast('You are not owner of this asset!');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const load_toast_id = toast.loading('Please wait...');\r\n    try {\r\n      const txhash = await updatePrice(chainId, library.getSigner(), tokenID, nftPrice);\r\n\r\n      if (txhash !== false) {\r\n        await fetch(`${baseApiUrl}/sync_block`);\r\n        toast.dismiss(load_toast_id);\r\n        toast.success('NFT Price is updated successfully!');\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 3000);\r\n      } else {\r\n        toast.dismiss(load_toast_id);\r\n        toast.error('NFT Price Update Failed!');\r\n      }\r\n    } catch (error) {\r\n      toast.dismiss(load_toast_id);\r\n      toast.error('NFT Price Update Failed!');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const purchaseNFT = async () => {\r\n    if (!loginStatus) {\r\n      toast.error('Please connect wallet correctly!');\r\n      return;\r\n    }\r\n    if (ownerAddress === account.toLowerCase()) {\r\n      toast.error('You are current owner of this asset!');\r\n      return;\r\n    }\r\n\r\n    if (listed === false) {\r\n      toast.error('Currently not open for sale 🔒');\r\n      return;\r\n    }\r\n\r\n    const balance = parseFloat(ethers.utils.formatEther(await library.getBalance(account)));\r\n    if (parseFloat(price) > balance) {\r\n      toast.error('Your wallet balance is not enough to purchase this NFT');\r\n      return;\r\n    }\r\n\r\n    console.log(balance);\r\n    console.log(ethers.utils.parseEther(price));\r\n\r\n    setLoading(true);\r\n    const load_toast_id = toast.loading('Please wait...');\r\n    try {\r\n      const txhash = await buy(chainId, library.getSigner(), tokenID, price);\r\n      if (txhash !== false) {\r\n        await fetch(`${baseApiUrl}/sync_block`);\r\n        toast.success('Purchased this Assets!');\r\n        setTimeout(() => {\r\n          window.location.href = `/creatorDetail/${account}`;\r\n        }, 3000);\r\n      }\r\n    } catch (error) {\r\n      toast.error('Asset purchase failed!');\r\n      console.log(error);\r\n    }\r\n    toast.dismiss(load_toast_id);\r\n    setLoading(false);\r\n  };\r\n\r\n  const priceChangeHandler = newPrice => {\r\n    setNFTPrice(newPrice);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isLoggedin = account && active && chainId === parseInt(process.env.REACT_APP_NETWORK_ID, 10);\r\n    setLoginStatus(isLoggedin);\r\n  }, [connector, library, account, active, chainId]);\r\n\r\n  function RenderHeaderCta() {\r\n    if (loginStatus === false) {\r\n      return <></>;\r\n    } else if (isOwnsProduct()) {\r\n      return (\r\n        <Row className=\"m-0 mt-4\">\r\n          <Col xs=\"12\" sm=\"4\" className=\"pl-0 mb-3 mb-sm-0\">\r\n            <Input type=\"number\" value={nftPrice} name=\"price\" onChange={priceChangeHandler} />\r\n          </Col>\r\n          <Col xs=\"6\" sm=\"auto\">\r\n            <Button label=\"Update Price\" variant=\"primary\" isLoading={loading} onClick={updateNFTPrice} />\r\n          </Col>\r\n          {loginStatus && (\r\n            <Col xs=\"6\" sm=\"auto\">\r\n              <Button\r\n                label={listed ? 'Disable for sale' : 'Enable for sale'}\r\n                isLoading={loading}\r\n                variant=\"primary\"\r\n                onClick={updateNFTListingStatus}\r\n              />\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"mt-4\">\r\n          <Button className=\"buy-now-btn\" label=\"Buy now\" isLoading={loading} variant=\"primary\" onClick={purchaseNFT} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return <div className=\"header-cta\">{RenderHeaderCta()}</div>;\r\n}\r\n","import { Card, Col, Form, Image, Nav, Row, Tab } from 'react-bootstrap';\r\nimport InfoText from '../../../../components/Text/index';\r\nimport './index.scss';\r\nimport { NFTEvent, useGetUserList } from '../../../../hooks/useApi';\r\nimport moment from 'moment';\r\nimport { truncateWalletString } from '../../../../utils/index';\r\nimport { faHistory } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function ProductHistory({ historyEvents, contractAddress }) {\r\n  const nft_user_list = useGetUserList();\r\n\r\n  let sorted_nft_events = historyEvents.sort((evt1, evt2) => {\r\n    if (evt1.doneOn > evt2.doneOn) return -1;\r\n    if (evt1.doneOn < evt2.doneOn) return 1;\r\n    return 0;\r\n  });\r\n\r\n  let event_list = [];\r\n  const AvatarImg = '/img/default-profile.png';\r\n\r\n  for (let i = 0; i < sorted_nft_events.length; i++) {\r\n    let doneOn = sorted_nft_events[i].doneOn;\r\n    let eventType = sorted_nft_events[i].eventType;\r\n\r\n    let user_wallet = '';\r\n    let user_image = '';\r\n    let user_name = '';\r\n    let user_verified = false;\r\n    let event_content = '';\r\n    let event_date = moment(doneOn * 1000).fromNow();\r\n\r\n    if (eventType === 0) {\r\n      let minter = sorted_nft_events[i].minter;\r\n\r\n      let user = null;\r\n      if (nft_user_list) user = nft_user_list.find(user => user.walletAddress === minter);\r\n\r\n      user_wallet = minter;\r\n      user_image = user && user.userAvatarUrl ? user.userAvatarUrl : AvatarImg;\r\n      user_name = user && user.username ? user.username : truncateWalletString(minter);\r\n      user_verified = user && user.verified ? user.verified : false;\r\n      event_content = 'The NFT was minted';\r\n    } else if (eventType === 1) {\r\n      // let seller = sorted_nft_events[i].seller;\r\n      let buyer = sorted_nft_events[i].buyer;\r\n      let nftSoldAtPrice = sorted_nft_events[i].nftSoldAtPrice;\r\n\r\n      let user = null;\r\n      if (nft_user_list) user = nft_user_list.find(user => user.walletAddress === buyer);\r\n\r\n      user_wallet = buyer;\r\n      user_image = user && user.userAvatarUrl ? user.userAvatarUrl : AvatarImg;\r\n      user_name = user && user.username ? user.username : truncateWalletString(buyer);\r\n      user_verified = user && user.verified ? user.verified : false;\r\n      event_content = `Bought at ${nftSoldAtPrice} BNB`;\r\n    } else if (eventType === 2) {\r\n      let priceUpdater = sorted_nft_events[i].priceUpdater;\r\n      let newNftPrice = sorted_nft_events[i].newNftPrice;\r\n      // let oldNftPrice = sorted_nft_events[i].oldNftPrice;\r\n\r\n      let user = null;\r\n      if (nft_user_list) user = nft_user_list.find(user => user.walletAddress === priceUpdater);\r\n\r\n      user_wallet = priceUpdater;\r\n      user_image = user && user.userAvatarUrl ? user.userAvatarUrl : AvatarImg;\r\n      user_name = user && user.username ? user.username : truncateWalletString(priceUpdater);\r\n      user_verified = user && user.verified ? user.verified : false;\r\n      event_content = `Put on sale for ${newNftPrice} BNB`;\r\n    } else {\r\n      continue;\r\n    }\r\n\r\n    event_list.push({\r\n      user_wallet: user_wallet,\r\n      user_image: user_image,\r\n      user_name: user_name,\r\n      user_verified: user_verified,\r\n      event_content: event_content,\r\n      event_date: event_date,\r\n    });\r\n  }\r\n\r\n  function HistoryRow({ event }) {\r\n    return (\r\n      <Row className=\"sub-card m-0 content history-item\">\r\n        <Col xs=\"auto\" className=\"avatar pl-4\">\r\n          <Image src={event.user_image} className=\"rounded\" />\r\n        </Col>\r\n        <Col className=\"fixed-size-col\">\r\n          <InfoText className=\"mb-1 text-ellipsis user-name\">{event.user_name}</InfoText>\r\n          <InfoText size=\"sm\" className=\"mb-1 text-ellipsis history-info\">\r\n            {event.event_content}\r\n          </InfoText>\r\n          <InfoText size=\"sm\" className=\"mb-0 text-ellipsis\">\r\n            {event.event_date}\r\n          </InfoText>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"product-history mt-5\">\r\n      <h3>History</h3>\r\n      {event_list?.map(history => {\r\n        return <HistoryRow event={history} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignal, faEye, faBoxOpen, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport './index.scss';\r\nexport default function ExternalViewLink({ eitherLink, IPFSLink, metadata }) {\r\n  function clickHandler(url) {\r\n    window.open(url, '_blank');\r\n  }\r\n  const links = [\r\n    {\r\n      label: 'View on BSC Scan',\r\n      url: eitherLink,\r\n      icon: faSignal,\r\n    },\r\n    {\r\n      label: 'View on IPFS',\r\n      url: IPFSLink,\r\n      icon: faEye,\r\n    },\r\n    // {\r\n    //   label: 'View on IPFS metadata',\r\n    //   url: metadata,\r\n    //   icon: faBoxOpen,\r\n    // },\r\n  ];\r\n  return (\r\n    <div className=\"external-link\">\r\n      {links.map(link => (\r\n        <div className=\"external-link__item\" onClick={() => clickHandler(link.url)}>\r\n          <span>\r\n            <FontAwesomeIcon icon={link.icon} />\r\n            {link.label}\r\n          </span>\r\n          <FontAwesomeIcon icon={faExternalLinkAlt} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { CardDeck, Col, Container, Image, Row } from 'react-bootstrap';\r\nimport './index.scss';\r\nimport ProductDetailHeader from './header/index';\r\nimport ArtCard from 'components/cards/art';\r\nimport { Button } from 'components/button/Button';\r\nimport ProfileImage from 'components/profile/ProfileImage';\r\nimport InfoText from 'components/Text';\r\nimport IconButton from 'components/button/icon';\r\nimport { Link, RouteComponentProps, useHistory } from 'react-router-dom';\r\nimport { useGetNFTDetail, NFTDetail } from '../../../hooks/useApi';\r\nimport ProductCard from '../../../components/cards/product/index';\r\nimport ProductActions from './productActions/index';\r\nimport ProductHistory from './history';\r\nimport { truncateWalletString } from '../../../utils/index';\r\nimport ExternalViewLink from '../../../components/ExternViewLink/index';\r\nimport { getNFTBscScanLink } from 'utils/contracts';\r\nimport PreviewImage from 'react-preview-image';\r\nimport { useState } from 'react';\r\n\r\nconst ProductDetails = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n}: RouteComponentProps<{ id: string }>) => {\r\n  const nftDetail: NFTDetail = useGetNFTDetail(id);\r\n  const history = useHistory();\r\n\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n\r\n  if (!nftDetail) {\r\n    return <></>;\r\n  }\r\n\r\n  function SoldLabel({ price }) {\r\n    return (\r\n      <>\r\n        <h4 className=\"mb-2\">Sold for</h4>\r\n        {price}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function OwnerBtnLabel({ userAvatarUrl, address }) {\r\n    return (\r\n      <div>\r\n        <h4>Owned By</h4>\r\n        <Row className=\"align-items-center m-0\">\r\n          <Col xs=\"4\" className=\"p-0\">\r\n            <ProfileImage img={userAvatarUrl} />\r\n          </Col>\r\n          <Col xs=\"8\" className=\"p-0 text-truncate\">\r\n            <span>{truncateWalletString(address)}</span>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function previewHandleTriggle() {\r\n    setPreviewVisible(!previewVisible);\r\n  }\r\n\r\n  return (\r\n    <div className=\"product-details\">\r\n      <ProductDetailHeader\r\n        creatorBackgroupUrl={nftDetail.creator.userBackgroupUrl}\r\n        creatorAvatarUrl={nftDetail.creator.userAvatarUrl}\r\n        creatorName={nftDetail.creator.username || truncateWalletString(nftDetail.creator.walletAddress)}\r\n      />\r\n      <div className=\"mt-5\">\r\n        <Container>\r\n          <Row>\r\n            <Col lg=\"7\" className=\"info\">\r\n              <h2>Artwork Information</h2>\r\n              <h5>{nftDetail?.nft.name}</h5>\r\n              {/* <h6>A moment to step back.</h6> */}\r\n              <Row>\r\n                <Col xl=\"7\">\r\n                  <InfoText variant=\"secondary\" size=\"sm\">\r\n                    {nftDetail?.nft.description}\r\n                  </InfoText>\r\n                </Col>\r\n                <Col xl=\"5\" className=\"mt-3 mt-xl-0\">\r\n                  <ExternalViewLink\r\n                    eitherLink={getNFTBscScanLink(nftDetail?.nft.tokenID)}\r\n                    IPFSLink={nftDetail?.nft.image}\r\n                    metadata=\"\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Image src={nftDetail?.nft.image} onClick={previewHandleTriggle} />\r\n              <PreviewImage source={[nftDetail?.nft.image]} index={0} visible={previewVisible} onHide={previewHandleTriggle} />\r\n            </Col>\r\n            <Col lg=\"5\" className=\"mt-5 mt-lg-0\">\r\n              <Row>\r\n                <Col xs=\"4\" sm=\"auto\" className=\"pr-0\">\r\n                  <Button\r\n                    className=\"product-btn\"\r\n                    label={<SoldLabel price={nftDetail?.nft.price} />}\r\n                    variant=\"primary\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"8\">\r\n                  <Button\r\n                    className=\"product-btn\"\r\n                    label={\r\n                      <OwnerBtnLabel\r\n                        userAvatarUrl={nftDetail?.owner.userAvatarUrl}\r\n                        address={nftDetail?.owner.walletAddress}\r\n                      />\r\n                    }\r\n                    variant=\"primary\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <ProductActions\r\n                name={nftDetail?.nft.name}\r\n                description={nftDetail?.nft.description}\r\n                image={nftDetail?.nft.image}\r\n                price={nftDetail?.nft.price}\r\n                ownerAddress={nftDetail?.nft.ownerAddress}\r\n                tokenID={nftDetail?.nft.tokenID}\r\n                listed={nftDetail?.nft.listed}\r\n              />\r\n              <ProductHistory historyEvents={nftDetail.historyEvents} contractAddress={nftDetail.nft.ownerAddress} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductDetails;\r\n","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { CardDeck, Container } from 'react-bootstrap';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport { Footer } from './components/footer/Footer';\r\n\r\nimport Header from './components/header/Header';\r\nimport HomePage from 'pages/home';\r\nimport ProfileEdit from 'pages/profile/edit';\r\nimport ProfileDetail from 'pages/profile/detail';\r\nimport Upload from 'pages/upload';\r\nimport ProductDetails from 'pages/product/detail';\r\nimport { useEagerConnect } from './hooks/useEagerConnect';\r\nimport { useFetchProfileList, useFetchProfile } from './state/hooks';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport ScrollToTop from 'utils/scrollToTop';\r\n\r\nfunction App() {\r\n  useEagerConnect();\r\n  useFetchProfileList();\r\n  useFetchProfile();\r\n\r\n  return (\r\n    <>\r\n      <Toaster position=\"top-center\" toastOptions={{ success: { duration: 3000 }, error: { duration: 3000 } }} />\r\n      <div className=\"app\">\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <ScrollToTop />\r\n          <Header />\r\n          <div className=\"body\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={HomePage} />\r\n              <Route exact path=\"/profile/edit\" component={ProfileEdit} />\r\n              <Route exact path=\"/creatorDetail/:walletAddress\" component={ProfileDetail} />\r\n              <Route exact path=\"/upload\" component={Upload} />\r\n              <Route exact path=\"/details/:id\" component={ProductDetails} />\r\n            </Switch>\r\n          </div>\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\"\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useWeb3React } from \"@web3-react/core\"\r\n\r\nexport function useEagerConnect() {\r\n  const { active } = useWeb3React()\r\n  const { login } = useAuth()\r\n\r\n  const [tried, setTried] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    login()\r\n    setError(error)\r\n    setTried(true)\r\n  }, [login, error]) // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true)\r\n    }\r\n  }, [tried, active])\r\n\r\n  return [tried, error]\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Web3ReactProvider } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'state';\r\n\r\nfunction getLibrary(provider) {\r\n  const library = new Web3Provider(provider);\r\n  library.pollingInterval = 12000;\r\n  return library;\r\n}\r\n\r\nReactDOM.render(\r\n  <Web3ReactProvider getLibrary={getLibrary}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Web3ReactProvider>,\r\n  document.getElementById('root'),\r\n);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}